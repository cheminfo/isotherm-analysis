{"version":3,"file":"isotherm-analysis.min.js","sources":["../node_modules/is-any-array/src/index.js","../node_modules/ml-array-max/node_modules/is-any-array/src/index.js","../node_modules/ml-array-max/lib-es6/index.js","../node_modules/ml-array-sum/node_modules/is-any-array/src/index.js","../node_modules/ml-array-sum/lib-es6/index.js","../node_modules/ml-array-normed/lib-es6/index.js","../node_modules/ml-array-rescale/node_modules/is-any-array/src/index.js","../node_modules/ml-array-min/node_modules/is-any-array/src/index.js","../node_modules/ml-array-min/lib-es6/index.js","../node_modules/ml-array-rescale/lib-es6/index.js","../node_modules/ml-array-sequential-fill/node_modules/is-any-array/src/index.js","../node_modules/ml-array-sequential-fill/lib-es6/index.js","../node_modules/ml-zones/src/normalize.js","../node_modules/ml-array-xy-equally-spaced/src/integral.js","../node_modules/ml-array-xy-equally-spaced/src/index.js","../node_modules/ml-zones/src/invert.js","../node_modules/ml-zones/src/zonesWithPoints.js","../node_modules/ml-array-xy-equally-spaced/src/equallySpacedSlot.js","../node_modules/ml-array-xy-equally-spaced/src/equallySpacedSmooth.js","../node_modules/ml-array-xy-filter-x/src/index.js","../node_modules/ml-array-xy-filter-x/src/getZones.js","../node_modules/ml-matrix/src/inspect.js","../node_modules/ml-matrix/src/util.js","../node_modules/ml-matrix/src/matrix.js","../node_modules/ml-matrix/src/stat.js","../node_modules/ml-matrix/src/mathOperations.js","../node_modules/ml-matrix/src/views/base.js","../node_modules/ml-matrix/src/views/transpose.js","../node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","../node_modules/ml-matrix/src/dc/lu.js","../node_modules/ml-matrix/src/dc/util.js","../node_modules/ml-matrix/src/dc/qr.js","../node_modules/ml-matrix/src/dc/svd.js","../node_modules/ml-matrix/src/decompositions.js","../node_modules/ml-pad-array/src/index.js","../node_modules/ml-savitzky-golay/src/index.js","../node_modules/ml-array-median/node_modules/is-any-array/src/index.js","../node_modules/median-quickselect/lib/median-quickselect.min.js","../node_modules/ml-array-median/lib-es6/index.js","../node_modules/ml-spectra-processing/src/x/xDivide.js","../node_modules/d3-array/build/d3-array.js","../node_modules/ml-spectra-processing/src/x/xSubtract.js","../node_modules/ml-stat/array.js","../node_modules/common-spectrum/src/Analysis.js","../node_modules/common-spectrum/src/util/getNormalizedData.js","../node_modules/jcampconverter/src/complexChromatogram.js","../node_modules/jcampconverter/src/convertToFloatArray.js","../node_modules/jcampconverter/src/parse/fastParseXYData.js","../node_modules/jcampconverter/src/parse/parsePeakTable.js","../node_modules/jcampconverter/src/parse/parseXYA.js","../node_modules/jcampconverter/src/2d/add2D.js","../node_modules/jcampconverter/src/2d/convertTo3DZ.js","../node_modules/jcampconverter/src/2d/generateContourLines.js","../node_modules/ml-fft/src/fftlib.js","../node_modules/nmr-processing/src/constants/gyromagneticRatio.js","../node_modules/jcampconverter/src/profiling.js","../node_modules/jcampconverter/src/simpleChromatogram.js","../node_modules/jcampconverter/src/postProcessing.js","../node_modules/jcampconverter/src/postProcessingNMR.js","../node_modules/jcampconverter/src/prepareNtuplesDatatable.js","../node_modules/jcampconverter/src/prepareSpectrum.js","../node_modules/jcampconverter/src/convert.js","../node_modules/common-spectrum/src/jsgraph/addStyle.js","../node_modules/common-spectrum/src/jsgraph/colors.js","../node_modules/convert-to-jcamp/src/fromVariables.js","../node_modules/convert-to-jcamp/src/fromJSON.js","../node_modules/convert-to-jcamp/src/creatorNtuples.js","../node_modules/common-spectrum/src/to/toJcamp.js","../src/from/utils.js","../src/from/fromIGA.js","../src/from/fromMicrometricsTXT.js","../node_modules/papaparse/papaparse.min.js","../src/from/constants.js","../src/from/fromBelsorp.js","../node_modules/common-spectrum/src/AnalysesManager.js","../node_modules/ml-array-mean/lib-es6/index.js","../node_modules/common-spectrum/src/from/fromJcamp.js","../src/from/fromMicrometricsCSV.js","../node_modules/common-spectrum/src/jsgraph/getJSGraph.js","../node_modules/common-spectrum/src/jsgraph/getNormalizationAnnotations.js"],"sourcesContent":["const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var maxValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the mean of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction sum(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += input[i];\n  }\n\n  return sumValue;\n}\n\nexport default sum;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport sum from 'ml-array-sum';\n\n/**\n * Computes the norm of the given values\n * @param {Array<number>} input\n * @param {object} [options={}]\n * @param {string} [options.algorithm='absolute'] absolute, sum or max\n * @param {number} [options.maxValue=1] new max value for algo max\n * @param {number} [options.sumValue=1] new max value for algo absolute and sum\n * @param {Array} [options.output=[]] specify the output array, can be the input array for in place modification\n * @return {number}\n */\n\nfunction norm(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$algorithm = options.algorithm,\n      algorithm = _options$algorithm === void 0 ? 'absolute' : _options$algorithm,\n      _options$sumValue = options.sumValue,\n      sumValue = _options$sumValue === void 0 ? 1 : _options$sumValue,\n      _options$maxValue = options.maxValue,\n      maxValue = _options$maxValue === void 0 ? 1 : _options$maxValue;\n\n  if (!isArray(input)) {\n    throw new Error('input must be an array');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  if (input.length === 0) {\n    throw new Error('input must not be empty');\n  }\n\n  switch (algorithm.toLowerCase()) {\n    case 'absolute':\n      {\n        var absoluteSumValue = absoluteSum(input) / sumValue;\n        if (absoluteSumValue === 0) return input.slice(0);\n\n        for (var i = 0; i < input.length; i++) {\n          output[i] = input[i] / absoluteSumValue;\n        }\n\n        return output;\n      }\n\n    case 'max':\n      {\n        var currentMaxValue = max(input);\n        if (currentMaxValue === 0) return input.slice(0);\n        var factor = maxValue / currentMaxValue;\n\n        for (var _i = 0; _i < input.length; _i++) {\n          output[_i] = input[_i] * factor;\n        }\n\n        return output;\n      }\n\n    case 'sum':\n      {\n        var sumFactor = sum(input) / sumValue;\n        if (sumFactor === 0) return input.slice(0);\n\n        for (var _i2 = 0; _i2 < input.length; _i2++) {\n          output[_i2] = input[_i2] / sumFactor;\n        }\n\n        return output;\n      }\n\n    default:\n      throw new Error(\"norm: unknown algorithm: \".concat(algorithm));\n  }\n}\n\nfunction absoluteSum(input) {\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += Math.abs(input[i]);\n  }\n\n  return sumValue;\n}\n\nexport default norm;\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var minValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\n/**\n *\n * @param {Array} input\n * @param {object} [options={}]\n * @param {Array} [options.output=[]] specify the output array, can be the input array for in place modification\n */\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","import isArray from 'is-any-array';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\n * Fill an array with sequential numbers\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\n * @param {object} [options={}]\n * @param {number} [options.from=0] - first value in the array\n * @param {number} [options.to=10] - last value in the array\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\n * @param {number} [options.step] - if not provided calculated from size\n * @return {Array<number>}\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !isArray(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    input.length = 0; // only works with normal array\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\nexport default sequentialFill;\n","/**\n * Normalize an array of zones:\n * - ensure than from < to\n * - merge overlapping zones\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [zones=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function normalize(zones = [], options = {}) {\n  if (zones.length === 0) return [];\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  zones = JSON.parse(JSON.stringify(zones)).map((zone) =>\n    zone.from > zone.to ? { from: zone.to, to: zone.from } : zone,\n  );\n  zones = zones.sort((a, b) => {\n    if (a.from !== b.from) return a.from - b.from;\n    return a.to - b.to;\n  });\n\n  zones.forEach((zone) => {\n    if (from > zone.from) zone.from = from;\n    if (to < zone.to) zone.to = to;\n  });\n\n  zones = zones.filter((zone) => zone.from <= zone.to);\n  if (zones.length === 0) return [];\n\n  let currentZone = zones[0];\n  let result = [currentZone];\n  for (let i = 1; i < zones.length; i++) {\n    let zone = zones[i];\n    if (zone.from <= currentZone.to) {\n      currentZone.to = zone.to;\n    } else {\n      currentZone = zone;\n      result.push(currentZone);\n    }\n  }\n  return result;\n}\n","/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param {number} x0\n * @param {number} x1\n * @param {number} slope\n * @param {number} intercept\n * @return {number} integral value.\n */\nexport default function integral(x0, x1, slope, intercept) {\n  return (\n    0.5 * slope * x1 * x1 +\n    intercept * x1 -\n    (0.5 * slope * x0 * x0 + intercept * x0)\n  );\n}\n","import sequentialFill from 'ml-array-sequential-fill';\nimport { zonesWithPoints, invert } from 'ml-zones';\n\nimport equallySpacedSmooth from './equallySpacedSmooth';\nimport equallySpacedSlot from './equallySpacedSlot';\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * If exclusions zone are present, zones are ignored !\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @param {Array} [options.exclusions=[]] array of from / to that should be skipped for the generation of the points\n * @param {Array} [options.zones=[]] array of from / to that should be kept\n * @return {object<x: Array, y:Array>} new object with x / y array with the equally spaced data.\n */\n\nexport default function equallySpaced(arrayXY = {}, options = {}) {\n  let { x, y } = arrayXY;\n  let xLength = x.length;\n  let reverse = false;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n    reverse = true;\n  }\n\n  let {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100,\n    exclusions = [],\n    zones = [],\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n\n  if (numberOfPoints < 2) {\n    throw new RangeError(\"'numberOfPoints' option must be greater than 1\");\n  }\n\n  if (zones.length === 0) {\n    zones = invert(exclusions, { from, to });\n  }\n\n  zones = zonesWithPoints(zones, numberOfPoints, { from, to });\n\n  let xResult = [];\n  let yResult = [];\n  for (let zone of zones) {\n    let zoneResult = processZone(\n      x,\n      y,\n      zone.from,\n      zone.to,\n      zone.numberOfPoints,\n      variant,\n      reverse,\n    );\n\n    xResult = xResult.concat(zoneResult.x);\n    yResult = yResult.concat(zoneResult.y);\n  }\n  if (reverse) {\n    if (from < to) {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    } else {\n      return { x: xResult, y: yResult };\n    }\n  } else {\n    if (from < to) {\n      return { x: xResult, y: yResult };\n    } else {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    }\n  }\n}\n\nfunction processZone(x, y, from, to, numberOfPoints, variant) {\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n\n  let output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from,\n      to,\n      size: numberOfPoints,\n    }),\n    y: output,\n  };\n}\n","import { normalize } from './normalize';\n\n/**\n * Convert an array of exclusions and keep only from / to\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [exclusions=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of zones (after inversion)\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of zones (after inversion)\n */\n\nexport function invert(exclusions = [], options = {}) {\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  exclusions = normalize(exclusions, { from, to });\n  if (exclusions.length === 0) return [{ from, to }];\n\n  let zones = [];\n  for (let i = 0; i < exclusions.length; i++) {\n    let exclusion = exclusions[i];\n    let nextExclusion = exclusions[i + 1];\n    if (i === 0) {\n      if (exclusion.from > from) {\n        zones.push({ from, to: exclusion.from });\n      }\n    }\n    if (i === exclusions.length - 1) {\n      if (exclusion.to < to) {\n        zones.push({ from: exclusion.to, to });\n      }\n    } else {\n      zones.push({ from: exclusion.to, to: nextExclusion.from });\n    }\n  }\n\n  return zones;\n}\n","import { normalize } from './normalize';\n\n/**\n * Add the number of points per zone to reach a specified total\n * @param {Array} [zones=[]]\n * @param {number} [numberOfPoints] Total number of points to distribute between zones\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function zonesWithPoints(zones, numberOfPoints, options = {}) {\n  if (zones.length === 0) return zones;\n  zones = normalize(zones, options);\n\n  const totalSize = zones.reduce((previous, current) => {\n    return previous + (current.to - current.from);\n  }, 0);\n\n  let unitsPerPoint = totalSize / numberOfPoints;\n  let currentTotal = 0;\n  for (let i = 0; i < zones.length - 1; i++) {\n    let zone = zones[i];\n    zone.numberOfPoints = Math.min(\n      Math.round((zone.to - zone.from) / unitsPerPoint),\n      numberOfPoints - currentTotal,\n    );\n    currentTotal += zone.numberOfPoints;\n  }\n\n  zones[zones.length - 1].numberOfPoints = numberOfPoints - currentTotal;\n\n  return zones;\n}\n","/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nexport default function equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints - 1);\n  let halfStep = step / 2;\n  let lastStep = x[x.length - 1] - x[x.length - 2];\n\n  let start = from - halfStep;\n  let output = new Array(numberOfPoints);\n\n  // Init main variables\n  let min = start;\n  let max = start + step;\n\n  let previousX = -Number.MAX_VALUE;\n  let previousY = 0;\n  let nextX = x[0];\n  let nextY = y[0];\n  let frontOutsideSpectra = 0;\n  let backOutsideSpectra = true;\n\n  let currentValue = 0;\n\n  // for slot algorithm\n  let currentPoints = 0;\n\n  let i = 1; // index of input\n  let j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n","import integral from './integral';\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nexport default function equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints - 1);\n  let halfStep = step / 2;\n\n  let output = new Array(numberOfPoints);\n\n  let initialOriginalStep = x[1] - x[0];\n  let lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  let min = from - halfStep;\n  let max = from + halfStep;\n\n  let previousX = Number.MIN_VALUE;\n  let previousY = 0;\n  let nextX = x[0] - initialOriginalStep;\n  let nextY = 0;\n\n  let currentValue = 0;\n  let slope = 0;\n  let intercept = 0;\n  let sumAtMin = 0;\n  let sumAtMax = 0;\n\n  let i = 0; // index of input\n  let j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  let add = 0;\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n","import getZones from './getZones';\n\n/**\n * Filter an array x/y based on various criteria\n * x points are expected to be sorted\n *\n * @param {object} points\n * @param {object} [options={}]\n * @param {array} [options.from]\n * @param {array} [options.to]\n * @param {array} [options.exclusions=[]]\n * @return {{x: Array<number>, y: Array<number>}}\n */\n\nexport default function filterX(points, options = {}) {\n  const { x, y } = points;\n  const { from = x[0], to = x[x.length - 1], exclusions = [] } = options;\n\n  let zones = getZones(from, to, exclusions);\n\n\n  let currentZoneIndex = 0;\n  let newX = [];\n  let newY = [];\n  let position = 0;\n  while (position < x.length) {\n    if (\n      x[position] <= zones[currentZoneIndex].to &&\n      x[position] >= zones[currentZoneIndex].from\n    ) {\n      newX.push(x[position]);\n      newY.push(y[position]);\n    } else {\n      if (x[position] > zones[currentZoneIndex].to) {\n        currentZoneIndex++;\n        if (!zones[currentZoneIndex]) break;\n      }\n    }\n    position++;\n  }\n\n  return {\n    x: newX,\n    y: newY\n  };\n}\n","export default function getZones(from, to, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to }];\n  }\n\n  let zones = [];\n  let currentFrom = from;\n  for (let exclusion of exclusions) {\n    if (currentFrom < exclusion.from) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (currentFrom < to) {\n    zones.push({\n      from: currentFrom,\n      to: to\n    });\n  }\n\n  return zones;\n}\n","const indent = ' '.repeat(2);\nconst indentData = ' '.repeat(4);\n\nexport function inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\n\nexport function inspectMatrixWithOptions(matrix, options = {}) {\n  const { maxRows = 15, maxColumns = 10, maxNumSize = 8 } = options;\n  return `${matrix.constructor.name} {\n${indent}[\n${indentData}${inspectData(matrix, maxRows, maxColumns, maxNumSize)}\n${indent}]\n${indent}rows: ${matrix.rows}\n${indent}columns: ${matrix.columns}\n}`;\n}\n\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j), maxNumSize));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indentData}`);\n}\n\nfunction formatNumber(num, maxNumSize) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.slice(eIndex);\n  return exponential.slice(0, maxNumSize - e.length) + e;\n}\n","/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices),\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  let rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  let columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n","import rescale from 'ml-array-rescale';\n\nimport { inspectMatrix, inspectMatrixWithOptions } from './inspect';\nimport { installMathOperations } from './mathOperations';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkIndices,\n} from './util';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      rescale(row, { min, max, output: row });\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      rescale(column, {\n        min: min,\n        max: max,\n        output: column,\n      });\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    let indices = checkIndices(this, rowIndices, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < indices.row.length; i++) {\n      let rowIndex = indices.row[i];\n      for (let j = 0; j < indices.column.length; j++) {\n        let columnIndex = indices.column[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  toString(options) {\n    return inspectMatrixWithOptions(this, options);\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[\n    Symbol.for('nodejs.util.inspect.custom')\n  ] = inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows > 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns > 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = arrayData[0].length;\n      if (typeof nColumns !== 'number' || nColumns === 0) {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n    return this;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    if (this.rows === 1) {\n      throw new RangeError('A matrix cannot have less than one row');\n    }\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array, true));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    if (this.columns === 1) {\n      throw new RangeError('A matrix cannot have less than one column');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","export function installMathOperations(AbstractMatrix, Matrix) {\r\n  AbstractMatrix.prototype.add = function add(value) {\r\n    if (typeof value === 'number') return this.addS(value);\r\n    return this.addM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.addS = function addS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) + value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.addM = function addM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.add = function add(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.add(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.sub = function sub(value) {\r\n    if (typeof value === 'number') return this.subS(value);\r\n    return this.subM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.subS = function subS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) - value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.subM = function subM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.sub = function sub(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.sub(value);\r\n  };\r\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\r\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\r\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\r\n  AbstractMatrix.subtract = AbstractMatrix.sub;\r\n\r\n  AbstractMatrix.prototype.mul = function mul(value) {\r\n    if (typeof value === 'number') return this.mulS(value);\r\n    return this.mulM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.mulS = function mulS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) * value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.mul = function mul(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.mul(value);\r\n  };\r\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\r\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\r\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\r\n  AbstractMatrix.multiply = AbstractMatrix.mul;\r\n\r\n  AbstractMatrix.prototype.div = function div(value) {\r\n    if (typeof value === 'number') return this.divS(value);\r\n    return this.divM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.divS = function divS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) / value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.divM = function divM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.div = function div(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.div(value);\r\n  };\r\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\r\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\r\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\r\n  AbstractMatrix.divide = AbstractMatrix.div;\r\n\r\n  AbstractMatrix.prototype.mod = function mod(value) {\r\n    if (typeof value === 'number') return this.modS(value);\r\n    return this.modM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.modS = function modS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) % value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.modM = function modM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.mod = function mod(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.mod(value);\r\n  };\r\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\r\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\r\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\r\n  AbstractMatrix.modulus = AbstractMatrix.mod;\r\n\r\n  AbstractMatrix.prototype.and = function and(value) {\r\n    if (typeof value === 'number') return this.andS(value);\r\n    return this.andM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.andS = function andS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) & value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.andM = function andM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.and = function and(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.and(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.or = function or(value) {\r\n    if (typeof value === 'number') return this.orS(value);\r\n    return this.orM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.orS = function orS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) | value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.orM = function orM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.or = function or(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.or(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.xor = function xor(value) {\r\n    if (typeof value === 'number') return this.xorS(value);\r\n    return this.xorM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.xorS = function xorS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) ^ value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.xor = function xor(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.xor(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\r\n    if (typeof value === 'number') return this.leftShiftS(value);\r\n    return this.leftShiftM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) << value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.leftShift(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\r\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\r\n    return this.signPropagatingRightShiftM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) >> value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.signPropagatingRightShift(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\r\n    if (typeof value === 'number') return this.rightShiftS(value);\r\n    return this.rightShiftM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) >>> value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.rightShift(value);\r\n  };\r\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\r\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\r\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\r\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\r\n\r\n  AbstractMatrix.prototype.not = function not() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, ~(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.not = function not(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.not();\r\n  };\r\n\r\n  AbstractMatrix.prototype.abs = function abs() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.abs(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.abs = function abs(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.abs();\r\n  };\r\n\r\n  AbstractMatrix.prototype.acos = function acos() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.acos(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.acos = function acos(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.acos();\r\n  };\r\n\r\n  AbstractMatrix.prototype.acosh = function acosh() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.acosh(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.acosh = function acosh(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.acosh();\r\n  };\r\n\r\n  AbstractMatrix.prototype.asin = function asin() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.asin(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.asin = function asin(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.asin();\r\n  };\r\n\r\n  AbstractMatrix.prototype.asinh = function asinh() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.asinh(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.asinh = function asinh(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.asinh();\r\n  };\r\n\r\n  AbstractMatrix.prototype.atan = function atan() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.atan(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.atan = function atan(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.atan();\r\n  };\r\n\r\n  AbstractMatrix.prototype.atanh = function atanh() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.atanh(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.atanh = function atanh(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.atanh();\r\n  };\r\n\r\n  AbstractMatrix.prototype.cbrt = function cbrt() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.cbrt(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.cbrt = function cbrt(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.cbrt();\r\n  };\r\n\r\n  AbstractMatrix.prototype.ceil = function ceil() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.ceil(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.ceil = function ceil(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.ceil();\r\n  };\r\n\r\n  AbstractMatrix.prototype.clz32 = function clz32() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.clz32(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.clz32 = function clz32(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.clz32();\r\n  };\r\n\r\n  AbstractMatrix.prototype.cos = function cos() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.cos(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.cos = function cos(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.cos();\r\n  };\r\n\r\n  AbstractMatrix.prototype.cosh = function cosh() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.cosh(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.cosh = function cosh(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.cosh();\r\n  };\r\n\r\n  AbstractMatrix.prototype.exp = function exp() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.exp(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.exp = function exp(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.exp();\r\n  };\r\n\r\n  AbstractMatrix.prototype.expm1 = function expm1() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.expm1(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.expm1 = function expm1(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.expm1();\r\n  };\r\n\r\n  AbstractMatrix.prototype.floor = function floor() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.floor(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.floor = function floor(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.floor();\r\n  };\r\n\r\n  AbstractMatrix.prototype.fround = function fround() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.fround(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.fround = function fround(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.fround();\r\n  };\r\n\r\n  AbstractMatrix.prototype.log = function log() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.log(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.log = function log(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.log();\r\n  };\r\n\r\n  AbstractMatrix.prototype.log1p = function log1p() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.log1p(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.log1p = function log1p(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.log1p();\r\n  };\r\n\r\n  AbstractMatrix.prototype.log10 = function log10() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.log10(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.log10 = function log10(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.log10();\r\n  };\r\n\r\n  AbstractMatrix.prototype.log2 = function log2() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.log2(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.log2 = function log2(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.log2();\r\n  };\r\n\r\n  AbstractMatrix.prototype.round = function round() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.round(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.round = function round(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.round();\r\n  };\r\n\r\n  AbstractMatrix.prototype.sign = function sign() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.sign(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.sign = function sign(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.sign();\r\n  };\r\n\r\n  AbstractMatrix.prototype.sin = function sin() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.sin(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.sin = function sin(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.sin();\r\n  };\r\n\r\n  AbstractMatrix.prototype.sinh = function sinh() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.sinh(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.sinh = function sinh(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.sinh();\r\n  };\r\n\r\n  AbstractMatrix.prototype.sqrt = function sqrt() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.sqrt(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.sqrt = function sqrt(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.sqrt();\r\n  };\r\n\r\n  AbstractMatrix.prototype.tan = function tan() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.tan(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.tan = function tan(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.tan();\r\n  };\r\n\r\n  AbstractMatrix.prototype.tanh = function tanh() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.tanh(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.tanh = function tanh(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.tanh();\r\n  };\r\n\r\n  AbstractMatrix.prototype.trunc = function trunc() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.trunc(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.trunc = function trunc(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.trunc();\r\n  };\r\n\r\n  AbstractMatrix.pow = function pow(matrix, arg0) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.pow(arg0);\r\n  };\r\n\r\n  AbstractMatrix.prototype.pow = function pow(value) {\r\n    if (typeof value === 'number') return this.powS(value);\r\n    return this.powM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.powS = function powS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.pow(this.get(i, j), value));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.powM = function powM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n}\r\n","import { AbstractMatrix } from '../matrix';\n\nexport default class BaseView extends AbstractMatrix {\n  constructor(matrix, rows, columns) {\n    super();\n    this.matrix = matrix;\n    this.rows = rows;\n    this.columns = columns;\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixTransposeView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.columns, matrix.rows);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(columnIndex, rowIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(columnIndex, rowIndex);\n  }\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix {\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    let lu = matrix.clone();\n    let rows = lu.rows;\n    let columns = lu.columns;\n    let pivotVector = new Float64Array(rows);\n    let pivotSign = 1;\n    let i, j, k, p, s, t, v;\n    let LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Float64Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  isSingular() {\n    let data = this.LU;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      if (data.get(j, j) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let lu = this.LU;\n    let rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    let count = value.columns;\n    let X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    let columns = lu.columns;\n    let i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / lu.get(k, k));\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    return X;\n  }\n\n  get determinant() {\n    let data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    let determinant = this.pivotSign;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      determinant *= data.get(j, j);\n    }\n    return determinant;\n  }\n\n  get lowerTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i > j) {\n          X.set(i, j, data.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, 1);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get upperTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i <= j) {\n          X.set(i, j, data.get(i, j));\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get pivotPermutationVector() {\n    return Array.from(this.pivotVector);\n  }\n}\n","export function hypotenuse(a, b) {\n  let r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let qr = value.clone();\n    let m = value.rows;\n    let n = value.columns;\n    let rdiag = new Float64Array(n);\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      let nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let qr = this.QR;\n    let m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    let count = value.columns;\n    let X = value.clone();\n    let n = qr.columns;\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr.get(i, k) * X.get(i, j);\n        }\n        s = -s / qr.get(k, k);\n        for (i = k; i < m; i++) {\n          X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / this.Rdiag[k]);\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * qr.get(i, k));\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  isFullRank() {\n    let columns = this.QR.columns;\n    for (let i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  get upperTriangularMatrix() {\n    let qr = this.QR;\n    let n = qr.columns;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X.set(i, j, qr.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, this.Rdiag[i]);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get orthogonalMatrix() {\n    let qr = this.QR;\n    let rows = qr.rows;\n    let columns = qr.columns;\n    let X = new Matrix(rows, columns);\n    let i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X.set(i, k, 0);\n      }\n      X.set(k, k, 1);\n      for (j = k; j < columns; j++) {\n        if (qr.get(k, k) !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr.get(i, k) * X.get(i, j);\n          }\n\n          s = -s / qr.get(k, k);\n\n          for (i = k; i < rows; i++) {\n            X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let m = value.rows;\n    let n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false,\n    } = options;\n\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                V.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k]),\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                V.set(i, j, t);\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V.set(i, k, -V.get(i, k));\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V.get(i, k + 1);\n                V.set(i, k + 1, V.get(i, k));\n                V.set(i, k, t);\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U.get(i, k + 1);\n                U.set(i, k + 1, U.get(i, k));\n                U.set(i, k, t);\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\nimport WrapperMatrix2D from './wrap/WrapperMatrix2D';\n\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","'use strict';\n\nvar defaultOptions = {\n  size: 1,\n  value: 0\n};\n\n/**\n * Case when the entry is an array\n * @param data\n * @param options\n * @returns {Array}\n */\nfunction arrayCase(data, options) {\n  var len = data.length;\n  if (typeof options.size === 'number') {\n    options.size = [options.size, options.size];\n  }\n\n  var cond = len + options.size[0] + options.size[1];\n\n  var output;\n  if (options.output) {\n    if (options.output.length !== cond) {\n      throw new RangeError('Wrong output size');\n    }\n    output = options.output;\n  } else {\n    output = new Array(cond);\n  }\n\n  var i;\n  if (options.value === 'circular') {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) {\n        output[i] = data[(len - (options.size[0] % len) + i) % len];\n      } else if (i < options.size[0] + len) {\n        output[i] = data[i - options.size[0]];\n      } else {\n        output[i] = data[(i - options.size[0]) % len];\n      }\n    }\n  } else if (options.value === 'replicate') {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = data[0];\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = data[len - 1];\n    }\n  } else if (options.value === 'symmetric') {\n    if (options.size[0] > len || options.size[1] > len) {\n      throw new RangeError(\n        'expanded value should not be bigger than the data length'\n      );\n    }\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = data[options.size[0] - 1 - i];\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = data[2 * len + options.size[0] - i - 1];\n    }\n  } else {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = options.value;\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = options.value;\n    }\n  }\n\n  return output;\n}\n\n/**\n * Case when the entry is a matrix\n * @param data\n * @param options\n * @returns {Array}\n */\nfunction matrixCase(data, options) {\n  // var row = data.length;\n  // var col = data[0].length;\n  if (options.size[0] === undefined) {\n    options.size = [options.size, options.size, options.size, options.size];\n  }\n  throw new Error('matrix not supported yet, sorry');\n}\n\n/**\n * Pads and array\n * @param {Array <number>} data\n * @param {object} options\n */\nfunction padArray(data, options) {\n  options = Object.assign({}, defaultOptions, options);\n  if (Array.isArray(data)) {\n    if (Array.isArray(data[0])) return matrixCase(data, options);\n    else return arrayCase(data, options);\n  } else {\n    throw new TypeError('data should be an array');\n  }\n}\n\nmodule.exports = padArray;\n","import { Matrix, MatrixTransposeView, inverse } from 'ml-matrix';\nimport padArray from 'ml-pad-array';\n\n/**\n * Factorial of a number\n * @ignore\n * @param n\n * @return {number}\n */\nfunction factorial(n) {\n  let r = 1;\n  while (n > 0) r *= n--;\n  return r;\n}\n\nconst defaultOptions = {\n  windowSize: 5,\n  derivative: 1,\n  polynomial: 2,\n  pad: 'none',\n  padValue: 'replicate',\n};\n\n/**\n * Savitzky-Golay filter\n * @param {Array <number>} data\n * @param {number} h\n * @param {Object} options\n * @returns {Array}\n */\nexport default function savitzkyGolay(data, h, options) {\n  options = Object.assign({}, defaultOptions, options);\n  if (\n    options.windowSize % 2 === 0 ||\n    options.windowSize < 5 ||\n    !Number.isInteger(options.windowSize)\n  ) {\n    throw new RangeError(\n      'Invalid window size (should be odd and at least 5 integer number)',\n    );\n  }\n  if (options.derivative < 0 || !Number.isInteger(options.derivative)) {\n    throw new RangeError('Derivative should be a positive integer');\n  }\n  if (options.polynomial < 1 || !Number.isInteger(options.polynomial)) {\n    throw new RangeError('Polynomial should be a positive integer');\n  }\n\n  let C, norm;\n  let step = Math.floor(options.windowSize / 2);\n\n  if (options.pad === 'pre') {\n    data = padArray(data, { size: step, value: options.padValue });\n  }\n\n  let ans = new Array(data.length - 2 * step);\n\n  if (\n    options.windowSize === 5 &&\n    options.polynomial === 2 &&\n    (options.derivative === 1 || options.derivative === 2)\n  ) {\n    if (options.derivative === 1) {\n      C = [-2, -1, 0, 1, 2];\n      norm = 10;\n    } else {\n      C = [2, -1, -2, -1, 2];\n      norm = 7;\n    }\n  } else {\n    let J = Matrix.ones(options.windowSize, options.polynomial + 1);\n    let inic = -(options.windowSize - 1) / 2;\n    for (let i = 0; i < J.rows; i++) {\n      for (let j = 0; j < J.columns; j++) {\n        if (inic + 1 !== 0 || j !== 0) J.set(i, j, Math.pow(inic + i, j));\n      }\n    }\n    let Jtranspose = new MatrixTransposeView(J);\n    let Jinv = inverse(Jtranspose.mmul(J));\n    C = Jinv.mmul(Jtranspose);\n    C = C.getRow(options.derivative);\n    norm = 1 / factorial(options.derivative);\n  }\n  let det = norm * Math.pow(h, options.derivative);\n  for (let k = step; k < data.length - step; k++) {\n    let d = 0;\n    for (let l = 0; l < C.length; l++) d += (C[l] * data[l + k - step]) / det;\n    ans[k - step] = d;\n  }\n\n  if (options.pad === 'post') {\n    ans = padArray(ans, { size: step, value: options.padValue });\n  }\n\n  return ans;\n}\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","(function(){function a(d){for(var e=0,f=d.length-1,g=void 0,h=void 0,i=void 0,j=c(e,f);!0;){if(f<=e)return d[j];if(f==e+1)return d[e]>d[f]&&b(d,e,f),d[j];for(g=c(e,f),d[g]>d[f]&&b(d,g,f),d[e]>d[f]&&b(d,e,f),d[g]>d[e]&&b(d,g,e),b(d,g,e+1),h=e+1,i=f;!0;){do h++;while(d[e]>d[h]);do i--;while(d[i]>d[e]);if(i<h)break;b(d,h,i)}b(d,e,i),i<=j&&(e=h),i>=j&&(f=i-1)}}var b=function b(d,e,f){var _ref;return _ref=[d[f],d[e]],d[e]=_ref[0],d[f]=_ref[1],_ref},c=function c(d,e){return~~((d+e)/2)};'undefined'!=typeof module&&module.exports?module.exports=a:window.median=a})();\n","import isArray from 'is-any-array';\nimport quickSelectMedian from 'median-quickselect';\n\n/**\n * Computes the median of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction median(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  return quickSelectMedian(input.slice());\n}\n\nexport default median;\n","/**\r\n\r\n/**\r\n * This function divide the first array by the second array or a constant value to each element of the first array\r\n * @param {Array<Number>} array1 - the array that will be rotated\r\n * @param {Array<Number>|Number} array2\r\n * @return {Array}\r\n */\r\nexport function xDivide(array1, array2) {\r\n  let isConstant = false;\r\n  let constant;\r\n  if (Array.isArray(array2)) {\r\n    if (array1.length !== array2.length) {\r\n      throw new Error('sub: size of array1 and array2 must be identical');\r\n    }\r\n  } else {\r\n    isConstant = true;\r\n    constant = Number(array2);\r\n  }\r\n\r\n  let array3 = new Array(array1.length);\r\n  if (isConstant) {\r\n    for (let i = 0; i < array1.length; i++) {\r\n      array3[i] = array1[i] / constant;\r\n    }\r\n  } else {\r\n    for (let i = 0; i < array1.length; i++) {\r\n      array3[i] = array1[i] / array2[i];\r\n    }\r\n  }\r\n\r\n  return array3;\r\n}\r\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3_array = {})));\n}(this, function (exports) { 'use strict';\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n    return {\n      left: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;\n          else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;\n          else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n\n  function ascendingComparator(f) {\n    return function(d, x) {\n      return ascending(f(d), x);\n    };\n  }\n\n  var ascendingBisect = bisector(ascending);\n  var bisectRight = ascendingBisect.right;\n  var bisectLeft = ascendingBisect.left;\n\n  function descending(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function number$1(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function variance(array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (f == null) {\n      while (++i < n) {\n        if (!isNaN(a = number$1(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    else {\n      while (++i < n) {\n        if (!isNaN(a = number$1(f(array[i], i, array)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  }\n\n  function deviation(array, f) {\n    var v = variance(array, f);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function extent(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    return [a, c];\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function identity(x) {\n    return x;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  var e10 = Math.sqrt(50);\n  var e5 = Math.sqrt(10);\n  var e2 = Math.sqrt(2);\n  function ticks(start, stop, count) {\n    var step = tickStep(start, stop, count);\n    return range(\n      Math.ceil(start / step) * step,\n      Math.floor(stop / step) * step + step / 2, // inclusive\n      step\n    );\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;\n    else if (error >= e5) step1 *= 5;\n    else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function sturges(values) {\n    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n  }\n\n  function number(x) {\n    return +x;\n  }\n\n  function histogram() {\n    var value = identity,\n        domain = extent,\n        threshold = sturges;\n\n    function histogram(data) {\n      var i,\n          n = data.length,\n          x,\n          values = new Array(n);\n\n      // Coerce values to numbers.\n      for (i = 0; i < n; ++i) {\n        values[i] = +value(data[i], i, data);\n      }\n\n      var xz = domain(values),\n          x0 = +xz[0],\n          x1 = +xz[1],\n          tz = threshold(values, x0, x1);\n\n      // Convert number of thresholds into uniform thresholds.\n      if (!Array.isArray(tz)) tz = ticks(x0, x1, +tz);\n\n      // Coerce thresholds to numbers, ignoring any outside the domain.\n      var m = tz.length;\n      for (i = 0; i < m; ++i) tz[i] = +tz[i];\n      while (tz[0] <= x0) tz.shift(), --m;\n      while (tz[m - 1] >= x1) tz.pop(), --m;\n\n      var bins = new Array(m + 1),\n          bin;\n\n      // Initialize bins.\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      }\n\n      // Assign data to bins by value, ignoring any outside the domain.\n      for (i = 0; i < n; ++i) {\n        x = values[i];\n        if (x0 <= x && x <= x1) {\n          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), histogram) : value;\n    };\n\n    histogram.domain = function(_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), histogram) : domain;\n    };\n\n    histogram.thresholds = function(_) {\n      if (!arguments.length) return threshold;\n      threshold = typeof _ === \"function\" ? _\n          : Array.isArray(_) ? constant(Array.prototype.map.call(_, number))\n          : constant(+_);\n      return histogram;\n    };\n\n    return histogram;\n  }\n\n  function quantile(array, p, f) {\n    if (f == null) f = number$1;\n    if (!(n = array.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n    if (p >= 1) return +f(array[n - 1], n - 1, array);\n    var n,\n        h = (n - 1) * p,\n        i = Math.floor(h),\n        a = +f(array[i], i, array),\n        b = +f(array[i + 1], i + 1, array);\n    return a + (b - a) * (h - i);\n  }\n\n  function freedmanDiaconis(values, min, max) {\n    values.sort(ascending);\n    return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function scott(values, min, max) {\n    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function max(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n\n    return a;\n  }\n\n  function mean(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number$1(array[i]))) s += a; else --j;\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) s += a; else --j;\n    }\n\n    if (j) return s / j;\n  }\n\n  function median(array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number$1(array[i]))) numbers.push(a);\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) numbers.push(a);\n    }\n\n    return quantile(numbers.sort(ascending), 0.5);\n  }\n\n  function merge(arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  }\n\n  function min(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n    }\n\n    return a;\n  }\n\n  function pairs(array) {\n    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [p, p = array[++i]];\n    return pairs;\n  }\n\n  function permute(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  }\n\n  function scan(array, compare) {\n    if (!(n = array.length)) return;\n    var i = 0,\n        n,\n        j = 0,\n        xi,\n        xj = array[j];\n\n    if (!compare) compare = ascending;\n\n    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n    if (compare(xj, xj) === 0) return j;\n  }\n\n  function shuffle(array, i0, i1) {\n    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n\n    return array;\n  }\n\n  function sum(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n    }\n\n    else {\n      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n    }\n\n    return s;\n  }\n\n  function transpose(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  }\n\n  function length(d) {\n    return d.length;\n  }\n\n  function zip() {\n    return transpose(arguments);\n  }\n\n  var version = \"0.7.1\";\n\n  exports.version = version;\n  exports.bisect = bisectRight;\n  exports.bisectRight = bisectRight;\n  exports.bisectLeft = bisectLeft;\n  exports.ascending = ascending;\n  exports.bisector = bisector;\n  exports.descending = descending;\n  exports.deviation = deviation;\n  exports.extent = extent;\n  exports.histogram = histogram;\n  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n  exports.thresholdScott = scott;\n  exports.thresholdSturges = sturges;\n  exports.max = max;\n  exports.mean = mean;\n  exports.median = median;\n  exports.merge = merge;\n  exports.min = min;\n  exports.pairs = pairs;\n  exports.permute = permute;\n  exports.quantile = quantile;\n  exports.range = range;\n  exports.scan = scan;\n  exports.shuffle = shuffle;\n  exports.sum = sum;\n  exports.ticks = ticks;\n  exports.tickStep = tickStep;\n  exports.transpose = transpose;\n  exports.variance = variance;\n  exports.zip = zip;\n\n}));","/**\r\n * This function xSubtract the first array by the second array or a constant value from each element of the first array\r\n * @param {Array} array1 - the array that will be rotated\r\n * @param {Array|Number} array2\r\n * @return {Array}\r\n */\r\nexport function xSubtract(array1, array2) {\r\n  let isConstant = false;\r\n  let constant;\r\n  if (Array.isArray(array2)) {\r\n    if (array1.length !== array2.length) {\r\n      throw new Error('sub: size of array1 and array2 must be identical');\r\n    }\r\n  } else {\r\n    isConstant = true;\r\n    constant = Number(array2);\r\n  }\r\n\r\n  let array3 = new Array(array1.length);\r\n  if (isConstant) {\r\n    for (let i = 0; i < array1.length; i++) {\r\n      array3[i] = array1[i] - constant;\r\n    }\r\n  } else {\r\n    for (let i = 0; i < array1.length; i++) {\r\n      array3[i] = array1[i] - array2[i];\r\n    }\r\n  }\r\n\r\n  return array3;\r\n}\r\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","import isAnyArray from 'is-any-array';\n\nimport { getNormalizedData } from './util/getNormalizedData';\n/**\n * Class allowing to store and manipulate an analysis.\n * An analysis may contain one or more spectra that are identified\n * by a 'flavor'\n * @class Analysis\n * @param {object} [options={}]\n * @param {string} [options.id=randomString] unique identifier\n * @param {string} [options.label=options.id] human redeable label\n */\nexport class Analysis {\n  constructor(options = {}) {\n    this.id = options.id || Math.random().toString(36).substring(2, 10);\n    this.label = options.label || this.id;\n    this.spectra = [];\n  }\n\n  /**\n   * Set a spectrum for a specific flavor\n   * @param {object} [variables]\n   * @param {object} [variables.x]\n   * @param {array} [variables.x.data]\n   * @param {array} [variables.x.units='x']\n   * @param {array} [variables.x.label='x']\n   * @param {object} [variables.y]\n   * @param {array} [variables.y.data]\n   * @param {array} [variables.y.units='y']\n   * @param {array} [variables.y.label='y']\n   * @param {object} [options={}]\n   * @param {string} [options.dataType='']\n   * @param {string} [options.title='']\n   * @param {object} [options.flavor={}]\n   *\n   */\n  pushSpectrum(variables, options = {}) {\n    this.spectra.push(standardizeData(variables, options));\n  }\n\n  /**\n   * Retrieve a Spectrum based on a flavor\n   * @param {object} [selector={}]\n   * @param {string} [selector.index]\n   * @param {string} [selector.flavor]\n   * @returns {Spectrum}\n   */\n  getSpectrum(selector = {}) {\n    let spectra = this.getSpectra(selector);\n    return spectra ? spectra[0] : undefined;\n  }\n\n  /**\n   * Retrieve a Spectrum based on a flavor\n   * @param {object} [selector={}]\n   * @param {string} [selector.index]\n   * @param {string} [selector.flavor]\n   * @returns {Spectrum}\n   */\n  getSpectra(selector = {}) {\n    const { index, flavor } = selector;\n    if (index !== undefined) {\n      return this.spectra[index] ? [this.spectra[index]] : undefined;\n    }\n    if (flavor === undefined || flavor === '') return this.spectra;\n    return this.spectra.filter((spectrum) => spectrum.flavor === flavor);\n  }\n\n  /**\n   * Return the data object for a specific flavor with possibly some\n   * normalization options\n   * @param {object} [options={}]\n   * @param {object} [options.selector]\n   * @param {string} [options.selector.index]\n   * @param {string} [options.selector.flavor]\n   * @param {object} [options.normalization]\n   *\n   */\n  getNormalizedData(options = {}) {\n    const { normalization, selector } = options;\n    const spectrum = this.getSpectrum(selector);\n    if (!spectrum) return undefined;\n    return getNormalizedData(spectrum, normalization);\n  }\n\n  getXLabel(selector) {\n    return this.getSpectrum(selector).variables.x.label;\n  }\n\n  getYLabel(selector) {\n    return this.getSpectrum(selector).variables.y.label;\n  }\n}\n\n/**\n * Internal function that ensure the order of x / y array\n * @param {DataXY} [variables]\n * @param {object} [options={}]\n * @return {Spectrum}\n */\nfunction standardizeData(variables, options = {}) {\n  let { meta = {}, dataType = '', title = '' } = options;\n\n  let xVariable = variables.x;\n  let yVariable = variables.y;\n  if (!xVariable || !yVariable) {\n    throw Error('A spectrum must contain at least x and y variables');\n  }\n  if (!isAnyArray(xVariable.data) || !isAnyArray(yVariable.data)) {\n    throw Error('x and y variables must contain an array data');\n  }\n\n  let x = xVariable.data;\n  let reverse = x && x.length > 1 && x[0] > x[x.length - 1];\n\n  for (let key in variables) {\n    let variable = variables[key];\n    if (reverse) variable.data = variable.data.reverse();\n    variable.label = variable.label || key;\n    variable.units =\n      variable.units || variable.label.replace(/^.*[([](.*)[)\\]].*$/, '$1');\n  }\n\n  return {\n    variables,\n    title,\n    dataType,\n    meta,\n    flavor: `${yVariable.units} vs ${xVariable.units}`,\n  };\n}\n","import normed from 'ml-array-normed';\nimport rescale from 'ml-array-rescale';\nimport equallySpaced from 'ml-array-xy-equally-spaced';\nimport filterX from 'ml-array-xy-filter-x';\nimport savitzkyGolay from 'ml-savitzky-golay';\nimport { xDivide, xSubtract } from 'ml-spectra-processing';\nimport Stat from 'ml-stat/array';\n/**\n *\n * @private\n * @param {object} spectrum\n * @param {object} [options={}]\n * @param {number} [options.from=spectrum.x[0]]\n * @param {number} [options.to=spectrum.x[spectrum.x.length-1]]\n * @param {number} [options.numberOfPoints]\n * @param {Array} [options.filters=[]] Array of object containing 'name' (centerMean, divideSD, normalize, rescale) and 'options'\n * @param {Array} [options.exclusions=[]]\n * @returns {DataXY}\n */\nexport function getNormalizedData(spectrum, options = {}) {\n  let data = {\n    x: spectrum.variables.x.data,\n    y: spectrum.variables.y.data,\n  };\n\n  let {\n    from = data.x[0],\n    to = data.x[data.x.length - 1],\n    numberOfPoints,\n    filters = [],\n    exclusions = [],\n    processing = '',\n  } = options;\n\n  let { x, y } = filterX(data, { from, to });\n\n  switch (processing) {\n    case 'firstDerivative':\n      if (options.processing) {\n        y = savitzkyGolay(y, 1, {\n          derivative: 1,\n          polynomial: 2,\n          windowSize: 5,\n        });\n        x = x.slice(2, x.length - 2);\n      }\n      break;\n    case 'secondDerivative':\n      if (options.processing) {\n        y = savitzkyGolay(y, 1, {\n          derivative: 2,\n          polynomial: 2,\n          windowSize: 5,\n        });\n        x = x.slice(2, x.length - 2);\n      }\n      break;\n    default:\n  }\n\n  for (let filter of filters) {\n    let filterOptions = filter.options || {};\n    switch (filter.name.toLowerCase()) {\n      case 'centermean': {\n        let mean = Stat.mean(y);\n        y = xSubtract(y, mean);\n        break;\n      }\n      case 'dividebysd': {\n        let std = Stat.standardDeviation(y);\n        y = xDivide(y, std);\n        break;\n      }\n      case 'normalize': {\n        // should be an integration in fact\n        y = normed(y, {\n          sumValue: filterOptions.value ? Number(filterOptions.value) : 1,\n          algorithm: 'absolute',\n        });\n        break;\n      }\n      case 'rescale': {\n        y = rescale(y, {\n          min: filterOptions.min ? Number(filter.options.min) : 0,\n          max: filterOptions.max ? Number(filter.options.max) : 1,\n        });\n        break;\n      }\n      case '':\n      case undefined:\n        break;\n      default:\n        throw new Error(`Unknown process kind: ${process.kind}`);\n    }\n  }\n\n  if (!numberOfPoints) {\n    return filterX({ x, y }, { from, to, exclusions });\n  }\n\n  return equallySpaced({ x, y }, { from, to, numberOfPoints, exclusions });\n}\n","const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\nexport function complexChromatogram(result) {\n  let spectra = result.spectra;\n  let length = spectra.length;\n  let chromatogram = {\n    times: new Array(length),\n    series: {\n      ms: {\n        dimension: 2,\n        data: new Array(length),\n      },\n    },\n  };\n\n  let existingGCMSFields = [];\n  for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n    let label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n    if (spectra[0][label]) {\n      existingGCMSFields.push(label);\n      chromatogram.series[label] = {\n        dimension: 1,\n        data: new Array(length),\n      };\n    }\n  }\n\n  for (let i = 0; i < length; i++) {\n    let spectrum = spectra[i];\n    chromatogram.times[i] = spectrum.pageValue;\n    for (let j = 0; j < existingGCMSFields.length; j++) {\n      chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n        spectrum[existingGCMSFields[j]],\n      );\n    }\n    if (spectrum.data) {\n      chromatogram.series.ms.data[i] = [spectrum.data.x, spectrum.data.y];\n    }\n  }\n  result.chromatogram = chromatogram;\n}\n\nexport function isMSField(canonicDataLabel) {\n  return GC_MS_FIELDS.indexOf(canonicDataLabel) !== -1;\n}\n\nexport function convertMSFieldToLabel(value) {\n  return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n}\n","export default function convertToFloatArray(stringArray) {\n  let floatArray = [];\n  for (let i = 0; i < stringArray.length; i++) {\n    floatArray.push(parseFloat(stringArray[i]));\n  }\n  return floatArray;\n}\n","export default function fastParseXYData(spectrum, value) {\n  // TODO need to deal with result\n  //  console.log(value);\n  // we check if deltaX is defined otherwise we calculate it\n\n  let yFactor = spectrum.yFactor;\n  let deltaX = spectrum.deltaX;\n\n  spectrum.isXYdata = true;\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  let currentX = spectrum.firstX;\n  let currentY = spectrum.firstY;\n\n  // we skip the first line\n  //\n  let endLine = false;\n  let ascii;\n  let i = 0;\n  for (; i < value.length; i++) {\n    ascii = value.charCodeAt(i);\n    if (ascii === 13 || ascii === 10) {\n      endLine = true;\n    } else {\n      if (endLine) break;\n    }\n  }\n\n  // we proceed taking the i after the first line\n  let newLine = true;\n  let isDifference = false;\n  let isLastDifference = false;\n  let lastDifference = 0;\n  let isDuplicate = false;\n  let inComment = false;\n  let currentValue = 0; // can be a difference or a duplicate\n  let lastValue = 0; // must be the real last value\n  let isNegative = false;\n  let inValue = false;\n  let skipFirstValue = false;\n  let decimalPosition = 0;\n  for (; i <= value.length; i++) {\n    if (i === value.length) ascii = 13;\n    else ascii = value.charCodeAt(i);\n    if (inComment) {\n      // we should ignore the text if we are after $$\n      if (ascii === 13 || ascii === 10) {\n        newLine = true;\n        inComment = false;\n      }\n    } else {\n      // when is it a new value ?\n      // when it is not a digit, . or comma\n      // it is a number that is either new or we continue\n      if (ascii <= 57 && ascii >= 48) {\n        // a number\n        inValue = true;\n        if (decimalPosition > 0) {\n          currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n        } else {\n          currentValue *= 10;\n          currentValue += ascii - 48;\n        }\n      } else if (ascii === 44 || ascii === 46) {\n        // a \",\" or \".\"\n        inValue = true;\n        decimalPosition++;\n      } else {\n        if (inValue) {\n          // need to process the previous value\n          if (newLine) {\n            newLine = false; // we don't check the X value\n            // console.log(\"NEW LINE\",isDifference, lastDifference);\n            // if new line and lastDifference, the first value is just a check !\n            // that we don't check ...\n            if (isLastDifference) skipFirstValue = true;\n          } else {\n            // need to deal with duplicate and differences\n            if (skipFirstValue) {\n              skipFirstValue = false;\n            } else {\n              if (isDifference) {\n                lastDifference = isNegative ? 0 - currentValue : currentValue;\n                isLastDifference = true;\n                isDifference = false;\n              } else if (!isDuplicate) {\n                lastValue = isNegative ? 0 - currentValue : currentValue;\n              }\n              let duplicate = isDuplicate ? currentValue - 1 : 1;\n              for (let j = 0; j < duplicate; j++) {\n                if (isLastDifference) {\n                  currentY += lastDifference;\n                } else {\n                  currentY = lastValue;\n                }\n                currentData.x.push(currentX);\n                currentData.y.push(currentY * yFactor);\n                currentX += deltaX;\n              }\n            }\n          }\n          isNegative = false;\n          currentValue = 0;\n          decimalPosition = 0;\n          inValue = false;\n          isDuplicate = false;\n        }\n\n        // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n        if (ascii < 74 && ascii > 63) {\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 64;\n        } else if (ascii > 96 && ascii < 106) {\n          // negative SQZ digits a b c d e f g h i (ascii 97-105)\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 96;\n          isNegative = true;\n        } else if (ascii === 115) {\n          // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n          inValue = true;\n          isDuplicate = true;\n          currentValue = 9;\n        } else if (ascii > 82 && ascii < 91) {\n          inValue = true;\n          isDuplicate = true;\n          currentValue = ascii - 82;\n        } else if (ascii > 73 && ascii < 83) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 73;\n        } else if (ascii > 105 && ascii < 115) {\n          // negative DIF digits j k l m n o p q r (ascii 106-114)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 105;\n          isNegative = true;\n        } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n          // $ sign, we need to check the next one\n          inValue = true;\n          inComment = true;\n        } else if (ascii === 37) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = 0;\n          isNegative = false;\n        } else if (ascii === 45) {\n          // a \"-\"\n          // check if after there is a number, decimal or comma\n          let ascii2 = value.charCodeAt(i + 1);\n          if (\n            (ascii2 >= 48 && ascii2 <= 57) ||\n            ascii2 === 44 ||\n            ascii2 === 46\n          ) {\n            inValue = true;\n            if (!newLine) isLastDifference = false;\n            isNegative = true;\n          }\n        } else if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n        // and now analyse the details ... space or tabulation\n        // if \"+\" we just don't care\n      }\n    }\n  }\n}\n","const removeCommentRegExp = /\\$\\$.*/;\nconst peakTableSplitRegExp = /[,\\t ]+/;\n\nexport default function parsePeakTable(spectrum, value, result) {\n  spectrum.isPeaktable = true;\n\n  if (!spectrum.variables || Object.keys(spectrum.variables) === 2) {\n    parseXY(spectrum, value, result);\n  } else {\n    parseXYZ(spectrum, value, result);\n  }\n\n  // we will add the data in the variables\n  if (spectrum.variables) {\n    for (let key in spectrum.variables) {\n      spectrum.variables[key].data = spectrum.data[key];\n    }\n  }\n}\n\nfunction parseXY(spectrum, value, result) {\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    let values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % 2 === 0) {\n      for (let j = 0; j < values.length; j = j + 2) {\n        // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n        currentData.x.push(parseFloat(values[j]) * spectrum.xFactor);\n        currentData.y.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n\nfunction parseXYZ(spectrum, value, result) {\n  let currentData = {};\n  let variables = Object.keys(spectrum.variables);\n  let numberOfVariables = variables.length;\n  variables.forEach((variable) => (currentData[variable] = []));\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    let values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % numberOfVariables === 0) {\n      for (let j = 0; j < values.length; j++) {\n        // todo should try to find a xFactor (y, ...)\n        currentData[variables[j % numberOfVariables]].push(\n          parseFloat(values[j]),\n        );\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n","export default function parseXYA(spectrum, value) {\n  let removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n  spectrum.isXYAdata = true;\n  let values;\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    values = lines[i].trim().replace(removeSymbolRegExp, '').split(',');\n    currentData.x.push(parseFloat(values[0]));\n    currentData.y.push(parseFloat(values[1]));\n  }\n}\n","import convertTo3DZ from './convertTo3DZ';\nimport generateContourLines from './generateContourLines';\n\nexport default function add2D(result, options) {\n  let zData = convertTo3DZ(result.spectra);\n  if (!options.noContour) {\n    result.contourLines = generateContourLines(zData, options);\n    delete zData.z;\n  }\n  result.minMax = zData;\n}\n","import getMedian from 'ml-array-median';\n\nexport default function convertTo3DZ(spectra) {\n  let minZ = spectra[0].data.y[0];\n  let maxZ = minZ;\n  let ySize = spectra.length;\n  let xSize = spectra[0].data.x.length;\n\n  let z = new Array(ySize);\n  for (let i = 0; i < ySize; i++) {\n    z[i] = spectra[i].data.y;\n    for (let j = 0; j < xSize; j++) {\n      let value = z[i][j];\n      if (value < minZ) minZ = value;\n      if (value > maxZ) maxZ = value;\n    }\n  }\n\n  const firstX = spectra[0].data.x[0];\n  const lastX = spectra[0].data.x[spectra[0].data.x.length - 1]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n  const firstY = spectra[0].pageValue;\n  const lastY = spectra[ySize - 1].pageValue;\n\n  // Because the min / max value are the only information about the matrix if we invert\n  // min and max we need to invert the array\n  if (firstX > lastX) {\n    for (let spectrum of z) {\n      spectrum.reverse();\n    }\n  }\n  if (firstY > lastY) {\n    z.reverse();\n  }\n\n  return {\n    z: z,\n    minX: Math.min(firstX, lastX),\n    maxX: Math.max(firstX, lastX),\n    minY: Math.min(firstY, lastY),\n    maxY: Math.max(firstY, lastY),\n    minZ: minZ,\n    maxZ: maxZ,\n    noise: getMedian(z[0].map(Math.abs)),\n  };\n}\n","export default function generateContourLines(zData, options) {\n  let noise = zData.noise;\n  let z = zData.z;\n  let povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n  let isOver0, isOver1, isOver2, isOver3;\n  let nbSubSpectra = z.length;\n  let nbPovars = z[0].length;\n  let pAx, pAy, pBx, pBy;\n\n  let x0 = zData.minX;\n  let xN = zData.maxX;\n  let dx = (xN - x0) / (nbPovars - 1);\n  let y0 = zData.minY;\n  let yN = zData.maxY;\n  let dy = (yN - y0) / (nbSubSpectra - 1);\n  let minZ = zData.minZ;\n  let maxZ = zData.maxZ;\n\n  // System.out.prvarln('y0 '+y0+' yN '+yN);\n  // -------------------------\n  // Povars attribution\n  //\n  // 0----1\n  // |  / |\n  // | /  |\n  // 2----3\n  //\n  // ---------------------d------\n\n  let iter = options.nbContourLevels * 2;\n  let contourLevels = new Array(iter);\n  let lineZValue;\n  for (let level = 0; level < iter; level++) {\n    // multiply by 2 for positif and negatif\n    let contourLevel = {};\n    contourLevels[level] = contourLevel;\n    let side = level % 2;\n    let factor =\n      (maxZ - options.noiseMultiplier * noise) *\n      Math.exp((level >> 1) - options.nbContourLevels);\n    if (side === 0) {\n      lineZValue = factor + options.noiseMultiplier * noise;\n    } else {\n      lineZValue = 0 - factor - options.noiseMultiplier * noise;\n    }\n    let lines = [];\n    contourLevel.zValue = lineZValue;\n    contourLevel.lines = lines;\n\n    if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n    for (let iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n      let subSpectra = z[iSubSpectra];\n      let subSpectraAfter = z[iSubSpectra + 1];\n      for (let povar = 0; povar < nbPovars - 1; povar++) {\n        povarHeight0 = subSpectra[povar];\n        povarHeight1 = subSpectra[povar + 1];\n        povarHeight2 = subSpectraAfter[povar];\n        povarHeight3 = subSpectraAfter[povar + 1];\n\n        isOver0 = povarHeight0 > lineZValue;\n        isOver1 = povarHeight1 > lineZValue;\n        isOver2 = povarHeight2 > lineZValue;\n        isOver3 = povarHeight3 > lineZValue;\n\n        // Example povar0 is over the plane and povar1 and\n        // povar2 are below, we find the varersections and add\n        // the segment\n        if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n          pAx =\n            povar + (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n          pAy = iSubSpectra;\n          pBx = povar;\n          pBy =\n            iSubSpectra +\n            (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // remove push does not help !!!!\n        if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n          pAx = povar + 1;\n          pAy =\n            iSubSpectra +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n          pBx =\n            povar +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n          pBy = iSubSpectra + 1;\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // test around the diagonal\n        if (isOver1 !== isOver2) {\n          pAx =\n            (povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dx +\n            x0;\n          pAy =\n            (iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dy +\n            y0;\n          if (isOver1 !== isOver0) {\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n            pBy = iSubSpectra;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver0) {\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver1 !== isOver3) {\n            pBx = povar + 1;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver3) {\n            pBx =\n              povar +\n              (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    minX: zData.minX,\n    maxX: zData.maxX,\n    minY: zData.minY,\n    maxY: zData.maxY,\n    segments: contourLevels,\n  };\n}\n","/**\n * Fast Fourier Transform module\n * 1D-FFT/IFFT, 2D-FFT/IFFT (radix-2)\n */\nvar FFT = (function(){\n  var FFT;  \n  \n  if(typeof exports !== 'undefined') {\n    FFT = exports;   // for CommonJS\n  } else {\n    FFT = {};\n  }\n  \n  var version = {\n    release: '0.3.0',\n    date: '2013-03'\n  };\n  FFT.toString = function() {\n    return \"version \" + version.release + \", released \" + version.date;\n  };\n\n  // core operations\n  var _n = 0,          // order\n      _bitrev = null,  // bit reversal table\n      _cstb = null;    // sin/cos table\n\n  var core = {\n    init : function(n) {\n      if(n !== 0 && (n & (n - 1)) === 0) {\n        _n = n;\n        core._initArray();\n        core._makeBitReversalTable();\n        core._makeCosSinTable();\n      } else {\n        throw new Error(\"init: radix-2 required\");\n      }\n    },\n    // 1D-FFT\n    fft1d : function(re, im) {\n      core.fft(re, im, 1);\n    },\n    // 1D-IFFT\n    ifft1d : function(re, im) {\n      var n = 1/_n;\n      core.fft(re, im, -1);\n      for(var i=0; i<_n; i++) {\n        re[i] *= n;\n        im[i] *= n;\n      }\n    },\n     // 1D-IFFT\n    bt1d : function(re, im) {\n      core.fft(re, im, -1);\n    },\n    // 2D-FFT Not very useful if the number of rows have to be equal to cols\n    fft2d : function(re, im) {\n      var tre = [],\n          tim = [],\n          i = 0;\n      // x-axis\n      for(var y=0; y<_n; y++) {\n        i = y*_n;\n        for(var x1=0; x1<_n; x1++) {\n          tre[x1] = re[x1 + i];\n          tim[x1] = im[x1 + i];\n        }\n        core.fft1d(tre, tim);\n        for(var x2=0; x2<_n; x2++) {\n          re[x2 + i] = tre[x2];\n          im[x2 + i] = tim[x2];\n        }\n      }\n      // y-axis\n      for(var x=0; x<_n; x++) {\n        for(var y1=0; y1<_n; y1++) {\n          i = x + y1*_n;\n          tre[y1] = re[i];\n          tim[y1] = im[i];\n        }\n        core.fft1d(tre, tim);\n        for(var y2=0; y2<_n; y2++) {\n          i = x + y2*_n;\n          re[i] = tre[y2];\n          im[i] = tim[y2];\n        }\n      }\n    },\n    // 2D-IFFT\n    ifft2d : function(re, im) {\n      var tre = [],\n          tim = [],\n          i = 0;\n      // x-axis\n      for(var y=0; y<_n; y++) {\n        i = y*_n;\n        for(var x1=0; x1<_n; x1++) {\n          tre[x1] = re[x1 + i];\n          tim[x1] = im[x1 + i];\n        }\n        core.ifft1d(tre, tim);\n        for(var x2=0; x2<_n; x2++) {\n          re[x2 + i] = tre[x2];\n          im[x2 + i] = tim[x2];\n        }\n      }\n      // y-axis\n      for(var x=0; x<_n; x++) {\n        for(var y1=0; y1<_n; y1++) {\n          i = x + y1*_n;\n          tre[y1] = re[i];\n          tim[y1] = im[i];\n        }\n        core.ifft1d(tre, tim);\n        for(var y2=0; y2<_n; y2++) {\n          i = x + y2*_n;\n          re[i] = tre[y2];\n          im[i] = tim[y2];\n        }\n      }\n    },\n    // core operation of FFT\n    fft : function(re, im, inv) {\n      var d, h, ik, m, tmp, wr, wi, xr, xi,\n          n4 = _n >> 2;\n      // bit reversal\n      for(var l=0; l<_n; l++) {\n        m = _bitrev[l];\n        if(l < m) {\n          tmp = re[l];\n          re[l] = re[m];\n          re[m] = tmp;\n          tmp = im[l];\n          im[l] = im[m];\n          im[m] = tmp;\n        }\n      }\n      // butterfly operation\n      for(var k=1; k<_n; k<<=1) {\n        h = 0;\n        d = _n/(k << 1);\n        for(var j=0; j<k; j++) {\n          wr = _cstb[h + n4];\n          wi = inv*_cstb[h];\n          for(var i=j; i<_n; i+=(k<<1)) {\n            ik = i + k;\n            xr = wr*re[ik] + wi*im[ik];\n            xi = wr*im[ik] - wi*re[ik];\n            re[ik] = re[i] - xr;\n            re[i] += xr;\n            im[ik] = im[i] - xi;\n            im[i] += xi;\n          }\n          h += d;\n        }\n      }\n    },\n    // initialize the array (supports TypedArray)\n    _initArray : function() {\n      if(typeof Uint32Array !== 'undefined') {\n        _bitrev = new Uint32Array(_n);\n      } else {\n        _bitrev = [];\n      }\n      if(typeof Float64Array !== 'undefined') {\n        _cstb = new Float64Array(_n*1.25);\n      } else {\n        _cstb = [];\n      }\n    },\n    // zero padding\n    _paddingZero : function() {\n      // TODO\n    },\n    // makes bit reversal table\n    _makeBitReversalTable : function() {\n      var i = 0,\n          j = 0,\n          k = 0;\n      _bitrev[0] = 0;\n      while(++i < _n) {\n        k = _n >> 1;\n        while(k <= j) {\n          j -= k;\n          k >>= 1;\n        }\n        j += k;\n        _bitrev[i] = j;\n      }\n    },\n    // makes trigonometiric function table\n    _makeCosSinTable : function() {\n      var n2 = _n >> 1,\n          n4 = _n >> 2,\n          n8 = _n >> 3,\n          n2p4 = n2 + n4,\n          t = Math.sin(Math.PI/_n),\n          dc = 2*t*t,\n          ds = Math.sqrt(dc*(2 - dc)),\n          c = _cstb[n4] = 1,\n          s = _cstb[0] = 0;\n      t = 2*dc;\n      for(var i=1; i<n8; i++) {\n        c -= dc;\n        dc += t*c;\n        s += ds;\n        ds -= t*s;\n        _cstb[i] = s;\n        _cstb[n4 - i] = c;\n      }\n      if(n8 !== 0) {\n        _cstb[n8] = Math.sqrt(0.5);\n      }\n      for(var j=0; j<n4; j++) {\n        _cstb[n2 - j]  = _cstb[j];\n      }\n      for(var k=0; k<n2p4; k++) {\n        _cstb[k + n2] = -_cstb[k];\n      }\n    }\n  };\n  // aliases (public APIs)\n  var apis = ['init', 'fft1d', 'ifft1d', 'fft2d', 'ifft2d'];\n  for(var i=0; i<apis.length; i++) {\n    FFT[apis[i]] = core[apis[i]];\n  }\n  FFT.bt = core.bt1d;\n  FFT.fft = core.fft1d;\n  FFT.ifft = core.ifft1d;\n  \n  return FFT;\n}).call(this);\n","// sources:\n// https://en.wikipedia.org/wiki/Gyromagnetic_ratio\n\n// TODO: can we have a better source and more digits ? @jwist\n\nexport const gyromagneticRatio = {\n  '1H': 267.52218744e6,\n  '2H': 41.065e6,\n  '3H': 285.3508e6,\n  '3He': -203.789e6,\n  '7Li': 103.962e6,\n  '13C': 67.28284e6,\n  '14N': 19.331e6,\n  '15N': -27.116e6,\n  '17O': -36.264e6,\n  '19F': 251.662e6,\n  '23Na': 70.761e6,\n  '27Al': 69.763e6,\n  '29Si': -53.19e6,\n  '31P': 108.291e6,\n  '57Fe': 8.681e6,\n  '63Cu': 71.118e6,\n  '67Zn': 16.767e6,\n  '129Xe': -73.997e6,\n};\n","export default function profiling(result, action, options) {\n  if (result.profiling) {\n    result.profiling.push({\n      action,\n      time: Date.now() - options.start,\n    });\n  }\n}\n","export default function simpleChromatogram(result) {\n  let data = result.spectra[0].data;\n  result.chromatogram = {\n    times: data.x.slice(),\n    series: {\n      intensity: {\n        dimension: 1,\n        data: data.y.slice(),\n      },\n    },\n  };\n}\n","import add2D from './2d/add2D';\nimport { complexChromatogram } from './complexChromatogram';\nimport postProcessingNMR from './postProcessingNMR';\nimport profiling from './profiling';\nimport simpleChromatogram from './simpleChromatogram';\n\nexport default function postProcessing(entriesFlat, result, options) {\n  // converting Hz to ppm\n  postProcessingNMR(entriesFlat);\n\n  for (let entry of entriesFlat) {\n    if (Object.keys(entry.ntuples).length > 0) {\n      let newNtuples = [];\n      let keys = Object.keys(entry.ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let values = entry.ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      entry.ntuples = newNtuples;\n    }\n\n    if (entry.twoD && options.wantXY) {\n      add2D(entry, options);\n\n      profiling(result, 'Finished countour plot calculation', options);\n\n      if (!options.keepSpectra) {\n        delete entry.spectra;\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (entry.spectra.length > 1) {\n        complexChromatogram(entry);\n      } else {\n        simpleChromatogram(entry);\n      }\n      profiling(result, 'Finished chromatogram calculation', options);\n    }\n  }\n}\n","import { gyromagneticRatio } from 'nmr-processing';\n\nexport default function postProcessingNMR(entriesFlat) {\n  // specific NMR functions\n  let observeFrequency = 0;\n  let shiftOffsetVal = 0;\n\n  for (let entry of entriesFlat) {\n    for (let spectrum of entry.spectra) {\n      if (entry.ntuples && entry.ntuples.symbol) {\n        if (!observeFrequency && spectrum.observeFrequency) {\n          observeFrequency = spectrum.observeFrequency;\n        }\n        if (!shiftOffsetVal && spectrum.shiftOffsetVal) {\n          shiftOffsetVal = spectrum.shiftOffsetVal;\n        }\n      } else {\n        observeFrequency = spectrum.observeFrequency;\n        shiftOffsetVal = spectrum.shiftOffsetVal;\n      }\n\n      if (observeFrequency) {\n        if (spectrum.xUnits && spectrum.xUnits.toUpperCase().includes('HZ')) {\n          spectrum.xUnits = 'PPM';\n          spectrum.xFactor = spectrum.xFactor / observeFrequency;\n          spectrum.firstX = spectrum.firstX / observeFrequency;\n          spectrum.lastX = spectrum.lastX / observeFrequency;\n          spectrum.deltaX = spectrum.deltaX / observeFrequency;\n          for (let i = 0; i < spectrum.data.x.length; i++) {\n            spectrum.data.x[i] /= observeFrequency;\n          }\n        }\n      }\n      if (shiftOffsetVal) {\n        let shift = spectrum.firstX - shiftOffsetVal;\n        spectrum.firstX = spectrum.firstX - shift;\n        spectrum.lastX = spectrum.lastX - shift;\n        for (let i = 0; i < spectrum.data.x.length; i++) {\n          spectrum.data.x[i] -= shift;\n        }\n      }\n\n      if (\n        observeFrequency &&\n        entry.ntuples &&\n        entry.ntuples.symbol &&\n        entry.ntuples.nucleus\n      ) {\n        let unit = '';\n        let pageSymbolIndex = entry.ntuples.symbol.indexOf(spectrum.pageSymbol);\n        if (entry.ntuples.units && entry.ntuples.units[pageSymbolIndex]) {\n          unit = entry.ntuples.units[pageSymbolIndex];\n        }\n        if (unit !== 'PPM') {\n          if (pageSymbolIndex !== 0) {\n            throw Error('Not sure about this ntuples format');\n          }\n\n          let ratio0 = gyromagneticRatio[entry.ntuples.nucleus[0]];\n          let ratio1 = gyromagneticRatio[entry.ntuples.nucleus[1]];\n          if (!ratio0 || !ratio1) {\n            throw Error('Problem with determination of gyromagnetic ratio');\n          }\n          let ratio = (ratio0 / ratio1) * observeFrequency;\n          spectrum.pageValue /= ratio;\n        }\n      }\n    }\n  }\n}\n","export default function prepareNtuplesDatatable(currentEntry, spectrum, kind) {\n  let xIndex = -1;\n  let yIndex = -1;\n  let firstVariable = '';\n  let secondVariable = '';\n  if (kind.indexOf('++') > 0) {\n    firstVariable = kind.replace(/.*\\(([a-zA-Z0-9]+)\\+\\+.*/, '$1');\n    secondVariable = kind.replace(/.*\\.\\.([a-zA-Z0-9]+).*/, '$1');\n  } else {\n    kind = kind.replace(/[^a-zA-Z]/g, '');\n    firstVariable = kind.charAt(0);\n    secondVariable = kind.charAt(1);\n    spectrum.variables = {};\n    for (let symbol of kind) {\n      let lowerCaseSymbol = symbol.toLowerCase();\n      let index = currentEntry.ntuples.symbol.indexOf(symbol);\n      if (index === -1) throw Error(`Symbol undefined: ${symbol}`);\n      spectrum.variables[lowerCaseSymbol] = {};\n      for (let key in currentEntry.ntuples) {\n        if (currentEntry.ntuples[key][index]) {\n          spectrum.variables[lowerCaseSymbol][key.replace(/^var/, '')] =\n            currentEntry.ntuples[key][index];\n        }\n      }\n    }\n  }\n  xIndex = currentEntry.ntuples.symbol.indexOf(firstVariable);\n  yIndex = currentEntry.ntuples.symbol.indexOf(secondVariable);\n\n  if (xIndex === -1) xIndex = 0;\n  if (yIndex === -1) yIndex = 0;\n\n  if (currentEntry.ntuples.first) {\n    if (currentEntry.ntuples.first.length > xIndex) {\n      spectrum.firstX = currentEntry.ntuples.first[xIndex];\n    }\n    if (currentEntry.ntuples.first.length > yIndex) {\n      spectrum.firstY = currentEntry.ntuples.first[yIndex];\n    }\n  }\n  if (currentEntry.ntuples.last) {\n    if (currentEntry.ntuples.last.length > xIndex) {\n      spectrum.lastX = currentEntry.ntuples.last[xIndex];\n    }\n    if (currentEntry.ntuples.last.length > yIndex) {\n      spectrum.lastY = currentEntry.ntuples.last[yIndex];\n    }\n  }\n  if (\n    currentEntry.ntuples.vardim &&\n    currentEntry.ntuples.vardim.length > xIndex\n  ) {\n    spectrum.nbPoints = currentEntry.ntuples.vardim[xIndex];\n  }\n  if (currentEntry.ntuples.factor) {\n    if (currentEntry.ntuples.factor.length > xIndex) {\n      spectrum.xFactor = currentEntry.ntuples.factor[xIndex];\n    }\n    if (currentEntry.ntuples.factor.length > yIndex) {\n      spectrum.yFactor = currentEntry.ntuples.factor[yIndex];\n    }\n  }\n  if (currentEntry.ntuples.units) {\n    if (currentEntry.ntuples.units.length > xIndex) {\n      if (\n        currentEntry.ntuples.varname &&\n        currentEntry.ntuples.varname[xIndex]\n      ) {\n        spectrum.xUnits = `${currentEntry.ntuples.varname[xIndex]} [${currentEntry.ntuples.units[xIndex]}]`;\n      } else {\n        spectrum.xUnits = currentEntry.ntuples.units[xIndex];\n      }\n    }\n    if (currentEntry.ntuples.units.length > yIndex) {\n      if (\n        currentEntry.ntuples.varname &&\n        currentEntry.ntuples.varname[yIndex]\n      ) {\n        spectrum.yUnits = `${currentEntry.ntuples.varname[yIndex]} [${currentEntry.ntuples.units[yIndex]}]`;\n      } else {\n        spectrum.yUnits = currentEntry.ntuples.units[yIndex];\n      }\n    }\n  }\n}\n","export default function prepareSpectrum(spectrum) {\n  if (!spectrum.xFactor) spectrum.xFactor = 1;\n  if (!spectrum.yFactor) spectrum.yFactor = 1;\n}\n","import { isMSField, convertMSFieldToLabel } from './complexChromatogram';\nimport convertToFloatArray from './convertToFloatArray';\nimport fastParseXYData from './parse/fastParseXYData';\nimport parsePeakTable from './parse/parsePeakTable';\nimport parseXYA from './parse/parseXYA';\nimport postProcessing from './postProcessing';\nimport prepareNtuplesDatatable from './prepareNtuplesDatatable';\nimport prepareSpectrum from './prepareSpectrum';\nimport profiling from './profiling';\n\n// the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\nconst ntuplesSeparator = /[ \\t]*,[ \\t]*/;\n\nclass Spectrum {}\n\nconst defaultOptions = {\n  keepRecordsRegExp: /^$/,\n  canonicDataLabels: true,\n  canonicMetadataLabels: false,\n  dynamicTyping: true,\n  withoutXY: false,\n  chromatogram: false,\n  keepSpectra: false,\n  noContour: false,\n  nbContourLevels: 7,\n  noiseMultiplier: 5,\n  profiling: false,\n};\n\n/**\n *\n * @param {text} jcamp\n * @param {object} [options]\n * @param {number} [options.keepRecordsRegExp=/^$/] By default we don't keep meta information\n * @param {number} [options.canonicDataLabels=true] Canonize the Labels (uppercase without symbol)\n * @param {number} [options.canonicMetadataLabels=false] Canonize the metadata Labels (uppercase without symbol)\n * @param {number} [options.dynamicTyping=false] Convert numbers to Number\n * @param {number} [options.withoutXY=false] Remove the XY data\n * @param {number} [options.chromatogram=false] Special post-processing for GC / HPLC / MS\n * @param {number} [options.keepSpectra=false] Force to keep the spectra in case of 2D\n * @param {number} [options.noContour=false] Don't calculate countour in case of 2D\n * @param {number} [options.nbContourLevels=7] Number of positive / negative contour levels to calculate\n * @param {number} [options.noiseMultiplier=5] Define for 2D the level as 5 times the median as default\n * @param {number} [options.profiling=false] Add profiling information\n */\n\nexport default function convert(jcamp, options = {}) {\n  options = Object.assign({}, defaultOptions, options);\n  options.wantXY = !options.withoutXY;\n  options.start = Date.now();\n\n  let entriesFlat = [];\n\n  let result = {\n    profiling: options.profiling ? [] : false,\n    logs: [],\n    entries: [],\n  };\n\n  let tmpResult = { children: [] };\n  let currentEntry = tmpResult;\n  let parentsStack = [];\n\n  let spectrum = new Spectrum();\n\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  profiling(result, 'Before split to LDRS', options);\n\n  let ldrs = jcamp.replace(/[\\r\\n]+##/g, '\\n##').split('\\n##');\n\n  profiling(result, 'Split to LDRS', options);\n\n  if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n  for (let ldr of ldrs) {\n    // This is a new LDR\n    let position = ldr.indexOf('=');\n    let dataLabel = position > 0 ? ldr.substring(0, position) : ldr;\n    let dataValue = position > 0 ? ldr.substring(position + 1).trim() : '';\n\n    let canonicDataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n    if (canonicDataLabel === 'DATATABLE') {\n      let endLine = dataValue.indexOf('\\n');\n      if (endLine === -1) endLine = dataValue.indexOf('\\r');\n      if (endLine > 0) {\n        // ##DATA TABLE= (X++(I..I)), XYDATA\n        // We need to find the variables\n\n        let infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n        prepareNtuplesDatatable(currentEntry, spectrum, infos[0]);\n\n        spectrum.datatable = infos[0];\n        if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n          canonicDataLabel = 'PEAKTABLE';\n        } else if (\n          infos[1] &&\n          (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n        ) {\n          canonicDataLabel = 'XYDATA';\n          spectrum.deltaX =\n            (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n        }\n      }\n    }\n\n    if (canonicDataLabel === 'XYDATA') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n        if (dataValue.match(/.*\\+\\+.*/)) {\n          // ex: (X++(Y..Y))\n          if (!spectrum.deltaX) {\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n          fastParseXYData(spectrum, dataValue, result);\n        } else {\n          parsePeakTable(spectrum, dataValue, result);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    } else if (canonicDataLabel === 'PEAKTABLE') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        parsePeakTable(spectrum, dataValue, result);\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n    if (canonicDataLabel === 'PEAKASSIGNMENTS') {\n      if (options.wantXY) {\n        if (dataValue.match(/.*(XYA).*/)) {\n          // ex: (XYA)\n          parseXYA(spectrum, dataValue);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n\n    if (canonicDataLabel === 'TITLE') {\n      let parentEntry = currentEntry;\n      if (!parentEntry.children) {\n        parentEntry.children = [];\n      }\n      currentEntry = {\n        spectra: [],\n        ntuples: {},\n        info: {},\n        meta: {},\n      };\n      parentEntry.children.push(currentEntry);\n      parentsStack.push(parentEntry);\n      entriesFlat.push(currentEntry);\n      currentEntry.title = dataValue;\n    } else if (canonicDataLabel === 'DATATYPE') {\n      currentEntry.dataType = dataValue;\n      if (dataValue.toLowerCase().indexOf('nd') > -1) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'NTUPLES') {\n      if (dataValue.toLowerCase().indexOf('nd') > -1) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'DATACLASS') {\n      currentEntry.dataClass = dataValue;\n    } else if (canonicDataLabel === 'XUNITS') {\n      spectrum.xUnits = dataValue;\n    } else if (canonicDataLabel === 'YUNITS') {\n      spectrum.yUnits = dataValue;\n    } else if (canonicDataLabel === 'FIRSTX') {\n      spectrum.firstX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTX') {\n      spectrum.lastX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'FIRSTY') {\n      spectrum.firstY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTY') {\n      spectrum.lastY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'NPOINTS') {\n      spectrum.nbPoints = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'XFACTOR') {\n      spectrum.xFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'YFACTOR') {\n      spectrum.yFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXX') {\n      spectrum.maxX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINX') {\n      spectrum.minX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXY') {\n      spectrum.maxY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINY') {\n      spectrum.minY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'DELTAX') {\n      spectrum.deltaX = parseFloat(dataValue);\n    } else if (\n      canonicDataLabel === '.OBSERVEFREQUENCY' ||\n      canonicDataLabel === '$SFO1'\n    ) {\n      if (!spectrum.observeFrequency) {\n        spectrum.observeFrequency = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '.OBSERVENUCLEUS') {\n      if (!spectrum.xType) {\n        currentEntry.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n      }\n    } else if (canonicDataLabel === '$OFFSET') {\n      // OFFSET for Bruker spectra\n      currentEntry.shiftOffsetNum = 0;\n      if (!spectrum.shiftOffsetVal) {\n        spectrum.shiftOffsetVal = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '$REFERENCEPOINT') {\n      // OFFSET for Varian spectra\n      // if we activate this part it does not work for ACD specmanager\n      //         } else if (canonicDataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n      //                 var parts = dataValue.split(/ *, */);\n      //                 currentEntry.shiftOffsetNum = parseInt(parts[2].trim());\n      //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n    } else if (canonicDataLabel === 'VARNAME') {\n      currentEntry.ntuples.varname = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'SYMBOL') {\n      currentEntry.ntuples.symbol = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARTYPE') {\n      currentEntry.ntuples.vartype = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARFORM') {\n      currentEntry.ntuples.varform = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARDIM') {\n      currentEntry.ntuples.vardim = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'UNITS') {\n      currentEntry.ntuples.units = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'FACTOR') {\n      currentEntry.ntuples.factor = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'FIRST') {\n      currentEntry.ntuples.first = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'LAST') {\n      currentEntry.ntuples.last = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'MIN') {\n      currentEntry.ntuples.min = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'MAX') {\n      currentEntry.ntuples.max = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === '.NUCLEUS') {\n      if (currentEntry.ntuples) {\n        currentEntry.ntuples.nucleus = dataValue.split(ntuplesSeparator);\n      }\n      if (currentEntry.twoD) {\n        currentEntry.yType = dataValue.split(ntuplesSeparator)[0];\n      }\n    } else if (canonicDataLabel === 'PAGE') {\n      spectrum.page = dataValue.trim();\n      spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n      spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n    } else if (canonicDataLabel === 'RETENTIONTIME') {\n      spectrum.pageValue = parseFloat(dataValue);\n    } else if (isMSField(canonicDataLabel)) {\n      spectrum[convertMSFieldToLabel(canonicDataLabel)] = dataValue;\n    } else if (canonicDataLabel === 'SAMPLEDESCRIPTION') {\n      spectrum.sampleDescription = dataValue;\n    } else if (canonicDataLabel === 'END') {\n      currentEntry = parentsStack.pop();\n    }\n\n    if (\n      currentEntry &&\n      currentEntry.info &&\n      currentEntry.meta &&\n      canonicDataLabel.match(options.keepRecordsRegExp)\n    ) {\n      let value = dataValue.trim();\n      let target, label;\n      if (dataLabel.startsWith('$')) {\n        label = options.canonicMetadataLabels\n          ? canonicDataLabel.substring(1)\n          : dataLabel.substring(1);\n        target = currentEntry.meta;\n      } else {\n        label = options.canonicDataLabels ? canonicDataLabel : dataLabel;\n        target = currentEntry.info;\n      }\n\n      if (options.dynamicTyping) {\n        let parsedValue = Number.parseFloat(value);\n        if (!Number.isNaN(parsedValue)) value = parsedValue;\n      }\n      if (target[label]) {\n        if (!Array.isArray(target[label])) {\n          target[label] = [target[label]];\n        }\n        target[label].push(value);\n      } else {\n        target[label] = value;\n      }\n    }\n  }\n\n  profiling(result, 'Finished parsing', options);\n\n  postProcessing(entriesFlat, result, options);\n\n  profiling(result, 'Total time', options);\n\n  /*\n  if (result.children && result.children.length>0) {\n    result = { ...result, ...result.children[0] };\n  }\n  */\n  result.entries = tmpResult.children;\n  result.flatten = entriesFlat;\n\n  return result;\n}\n","export function addStyle(serie, spectrum, options = {}) {\n  const { color = 'darkgrey' } = options;\n  serie.style = [\n    {\n      name: 'unselected',\n      style: {\n        line: {\n          color,\n          width: 1,\n          dash: 1,\n        },\n      },\n    },\n    {\n      name: 'selected',\n      style: {\n        line: {\n          color,\n          width: 3,\n          dash: 1,\n        },\n      },\n    },\n  ];\n  serie.name = spectrum.label || spectrum.id;\n}\n","export const COLORS = [\n  '#FFB300',\n  '#803E75',\n  '#FF6800',\n  '#A6BDD7',\n  '#C10020',\n  '#CEA262',\n  '#817066',\n  '#007D34',\n  '#F6768E',\n  '#00538A',\n  '#FF7A5C',\n  '#53377A',\n  '#FF8E00',\n  '#B32851',\n  '#F4C800',\n  '#7F180D',\n  '#93AA00',\n  '#593315',\n  '#F13A13',\n  '#232C16',\n];\n","import creatorNtuples from './creatorNtuples';\nimport { fromJSON } from './fromJSON';\n\n/**\n * Create a jcamp from variables\n * @param {Array<Variable} [variables={}] - object of variables\n * @param {string} [options.info={}] - metadata of the file\n * @param {string} [options.info.title = ''] - title of the file\n * @param {string} [options.info.owner = ''] - owner of the file\n * @param {string} [options.info.origin = ''] - origin of the file\n * @param {string} [options.info.dataType = ''] - type of data\n * @param {object} [options.meta = {}] - comments to add to the file\n * @param {object} [options.forceNtuples = false] - force the ntuples format even if there is only x and y variables\n */\nexport function fromVariables(variables = {}, options = {}) {\n  const { info, meta, forceNtuples } = options;\n\n  let jcampOptions = {\n    info,\n    meta,\n  };\n\n  let keys = Object.keys(variables).map((key) => key.toLowerCase());\n  if (\n    keys.length === 2 &&\n    keys.includes('x') &&\n    keys.includes('y') &&\n    !forceNtuples\n  ) {\n    let x = variables.x;\n    let xLabel = x.label || x.name || 'x';\n\n    jcampOptions.info.xUnits = xLabel.includes(variables.x.units)\n      ? xLabel\n      : `${xLabel} [${variables.x.units}]`;\n\n    let y = variables.y;\n    let yLabel = y.label || y.name || 'y';\n\n    jcampOptions.info.yUnits = yLabel.includes(variables.y.units)\n      ? yLabel\n      : `${yLabel} [${variables.y.units}]`;\n    return fromJSON({ x: variables.x.data, y: variables.y.data }, jcampOptions);\n  } else {\n    return creatorNtuples(variables, options);\n  }\n}\n","/**\n * Create a jcamp\n * @param {object} data - object of array\n * @param {object} [options={}] - metadata object\n * @param {string} [options.info={}] - metadata of the file\n * @param {string} [options.info.title = ''] - title of the file\n * @param {string} [options.info.owner = ''] - owner of the file\n * @param {string} [options.info.origin = ''] - origin of the file\n * @param {string} [options.info.dataType = ''] - type of data\n * @param {string} [options.info.xUnits = ''] - units for the x axis for variables===undefined\n * @param {string} [options.info.yUnits = ''] - units for the y axis for variables===undefined\n * @param {object} [options.meta = {}] - comments to add to the file\n\n * @return {string} JCAMP of the input\n */\nexport function fromJSON(data, options = {}) {\n  const { meta = {}, info = {} } = options;\n\n  const {\n    title = '',\n    owner = '',\n    origin = '',\n    dataType = '',\n    xUnits = '',\n    yUnits = '',\n  } = info;\n  let firstX = Number.POSITIVE_INFINITY;\n  let lastX = Number.NEGATIVE_INFINITY;\n  let firstY = Number.POSITIVE_INFINITY;\n  let lastY = Number.NEGATIVE_INFINITY;\n  let points = [];\n\n  for (let i = 0; i < data.x.length; i++) {\n    let x = data.x[i];\n    let y = data.y[i];\n    if (firstX > x) {\n      firstX = x;\n    }\n    if (lastX < x) {\n      lastX = x;\n    }\n    if (firstY > y) {\n      firstY = y;\n    }\n    if (lastY < y) {\n      lastY = y;\n    }\n    points.push(`${x} ${y}`);\n  }\n\n  let header = `##TITLE=${title}\n##JCAMP-DX=4.24\n##DATA TYPE=${dataType}\n##ORIGIN=${origin}\n##OWNER=${owner}\n##XUNITS=${xUnits}\n##YUNITS=${yUnits}\n##FIRSTX=${firstX}\n##LASTX=${lastX}\n##FIRSTY=${firstY}\n##LASTY=${lastY}\\n`;\n\n  for (const key of Object.keys(meta)) {\n    header += `##$${key}=${meta[key]}\\n`;\n  }\n\n  // we leave the header and utf8 fonts ${header.replace(/[^\\t\\r\\n\\x20-\\x7F]/g, '')\n\n  return `${header}##NPOINTS=${points.length}\n##PEAK TABLE=(XY..XY)\n${points.join('\\n')}\n##END`;\n}\n","import maxFct from 'ml-array-max';\nimport minFct from 'ml-array-min';\n\n/**\n * Parse from a xyxy data array\n * @param {Array<Array<number>>} variables\n * @param {object} [meta] - same metadata object format that the fromText\n * @return {string} JCAMP of the input\n */\nexport default function creatorNtuples(variables, options) {\n  const { meta = {}, info = {} } = options;\n\n  const { title = '', owner = '', origin = '', dataType = '' } = info;\n\n  const symbol = [];\n  const varName = [];\n  const varType = [];\n  const varDim = [];\n  const units = [];\n  const first = [];\n  const last = [];\n  const min = [];\n  const max = [];\n  const factor = [];\n\n  const keys = Object.keys(variables);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    let variable = variables[key];\n\n    let name = variable.label && variable.label.replace(/ *\\[.*/, '');\n    let unit = variable.label && variable.label.replace(/.*\\[(.*)\\].*/, '$1');\n\n    symbol.push(variable.symbol || key);\n    varName.push(variable.name || name || key);\n    varDim.push(variables[key].data.length);\n\n    varType.push(\n      variable.type\n        ? variable.type.toUpperCase()\n        : i === 0\n        ? 'INDEPENDENT'\n        : 'DEPENDENT',\n    );\n    units.push(variable.units || unit || '');\n    first.push(variables[key][0]);\n    last.push(variables[key][variables[key].length - 1]);\n    min.push(minFct(variables[key].data));\n    max.push(maxFct(variables[key].data));\n    factor.push(1);\n  }\n\n  let header = `##TITLE=${title}\n##JCAMP-DX=6.00\n##DATA TYPE=${dataType}\n##ORIGIN=${origin}\n##OWNER=${owner}\\n`;\n\n  for (const key of Object.keys(meta)) {\n    header += `##$${key}=${meta[key]}\\n`;\n  }\n\n  header += `##NTUPLES= ${dataType}\n##VAR_NAME=  ${varName.join()}\n##SYMBOL=    ${symbol.join()}\n##VAR_TYPE=  ${varType.join()}\n##VAR_DIM=   ${varDim.join()}\n##UNITS=     ${units.join()}\n##PAGE= N=1\\n`;\n\n  header += `##DATA TABLE= (${symbol.join('')}..${symbol.join('')}), PEAKS\\n`;\n\n  for (let i = 0; i < variables[keys[0]].data.length; i++) {\n    let point = [];\n    for (let key of keys) {\n      point.push(variables[key].data[i]);\n    }\n    header += `${point.join('\\t')}\\n`;\n  }\n\n  header += '##END';\n  return header;\n}\n","import { fromVariables } from 'convert-to-jcamp';\n\nexport function toJcamp(analysis, options = {}) {\n  let jcamps = [];\n  for (let spectrum of analysis.spectra) {\n    jcamps.push(getJcamp(spectrum, options));\n  }\n  return jcamps.join('\\n');\n}\n\nfunction getJcamp(spectrum, options) {\n  const { info = {}, meta = {} } = options;\n\n  let jcampOptions = {\n    options: {},\n    info: {\n      title: spectrum.title,\n      dataType: spectrum.dataType,\n      ...info,\n    },\n    meta: { ...spectrum.meta, ...meta },\n  };\n\n  return fromVariables(spectrum.variables, jcampOptions);\n}\n","export function lineSplitTrim(line) {\n  return lineSplit(line)[1].trim();\n}\n\nexport function lineSplit(line) {\n  return line.split(/\\s{4,}/);\n}\n\nexport function lineSplitComma(line) {\n  return line.split(',')[1];\n}\n","import mean from 'ml-array-mean';\n\nimport { Analysis } from '..';\n\nimport { lineSplitTrim } from './utils';\n\nfunction parseIGAMeasurmentHeader(lines) {\n  let metaData = {};\n  // Let's use some cleaner names\n  metaData.systemType = lineSplitTrim(lines[0]);\n  metaData.systemOwner = lineSplitTrim(lines[1]);\n  metaData.systemReference = lineSplitTrim(lines[2]);\n  metaData.systemSerialNumber = lineSplitTrim(lines[3]);\n  metaData.sampleNumber = lineSplitTrim(lines[4]);\n  metaData.experimentType = lineSplitTrim(lines[5]);\n  // eslint-disable-next-line radix\n  metaData.experimentNumber = parseInt(lineSplitTrim(lines[6]));\n  metaData.title = lineSplitTrim(lines[7]);\n  metaData.comment = lineSplitTrim(lines[8]);\n  metaData.source = lineSplitTrim(lines[9]);\n  metaData.batch = lineSplitTrim(lines[10]);\n  metaData.id = lineSplitTrim(lines[11]);\n  metaData.experimentTitle = lineSplitTrim(lines[12]);\n  let tmp = lineSplitTrim(lines[14]).split(/\\s/);\n  metaData.sampleWeight = parseFloat(tmp[0]);\n  metaData.sampleWeightUnit = tmp[1];\n\n  tmp = lineSplitTrim(lines[15]).split(/\\s/);\n  metaData.sampleWeightDry = parseFloat(tmp[0]);\n  metaData.sampleWeightDryUnit = tmp[1];\n\n  tmp = lineSplitTrim(lines[18]).split(/\\s/);\n  metaData.balanceTrimV = parseFloat(tmp[0]);\n  metaData.balanceTrimVUnit = tmp[1];\n\n  metaData.balanceTrimT = lineSplitTrim(lines[19]);\n\n  tmp = lineSplitTrim(lines[20]).split(/\\s/);\n  metaData.counterWeightM = parseFloat(tmp[0]);\n  metaData.counterWeightMUnit = tmp[1];\n\n  tmp = lineSplitTrim(lines[21]).split(/\\s/);\n  metaData.counterWeightRho = parseFloat(tmp[0]);\n  metaData.counterWeightRhoUnit = tmp[1];\n\n  metaData.counterWeightT = lineSplitTrim(lines[22]);\n\n  tmp = lineSplitTrim(lines[23]).split(/\\s/);\n  metaData.tungstenM = parseFloat(tmp[0]);\n  metaData.tungstenMUnit = tmp[1];\n\n  tmp = lineSplitTrim(lines[24]).split(/\\s/);\n  metaData.tungstenRho = parseFloat(tmp[0]);\n  metaData.tungstenRhoUnit = tmp[1];\n\n  metaData.counterWeightT = lineSplitTrim(lines[25]);\n\n  tmp = lineSplitTrim(lines[26]).split(/\\s/);\n  metaData.chainExcessM = parseFloat(tmp[0]);\n  metaData.chainExcessMUnit = tmp[1];\n\n  tmp = lineSplitTrim(lines[27]).split(/\\s/);\n  metaData.chainExcessRho = parseFloat(tmp[0]);\n  metaData.chainExcessRhoUnit = tmp[1];\n\n  metaData.chainExcessT = lineSplitTrim(lines[28]);\n\n  metaData.applicationCode = lineSplitTrim(lines[44]);\n  metaData.mode = lineSplitTrim(lines[44]);\n  metaData.source = lineSplitTrim(lines[45]);\n  metaData.gasSource = lineSplitTrim(lines[46]);\n  metaData.vessel = lineSplitTrim(lines[47]);\n  metaData.reactor = lineSplitTrim(lines[48]);\n  metaData.pressureSensor = lineSplitTrim(lines[49]);\n  metaData.thermostat = lineSplitTrim(lines[50]);\n\n  metaData.nitrogenEOS = lineSplitTrim(lines[51]);\n  metaData.nitrogenSVP = lineSplitTrim(lines[52]);\n\n  metaData.seriesType = lineSplitTrim(lines[59]);\n\n  metaData.scan = parseInt(lineSplitTrim(lines[61]), 10);\n  metaData.course = lineSplitTrim(lines[62]);\n  metaData.referenceStateDevice = lineSplitTrim(lines[63]);\n  metaData.scanTitle = lineSplitTrim(lines[64]);\n  metaData.scanStart = lineSplitTrim(lines[65]);\n\n  return metaData;\n}\n\nfunction getLineNumbersOfMeasurement(lines) {\n  let starts = [];\n  let ends = [];\n  for (let [index, line] of lines.entries()) {\n    if (line.match('S E R I E S   D A T A   R E C O R D')) {\n      starts.push(index);\n    } else if (line.match('Scan Ends ')) {\n      ends.push(index + 2);\n    }\n  }\n  return [starts, ends];\n}\n\nfunction parseIGADataBlock(lines) {\n  let dataBlock = {\n    pressure: [],\n    gasDensity: [],\n    pp0: [],\n    totalWeight: [],\n    bet: [],\n    excessAdsorptionPercentage: [],\n    excessAdsorption: [],\n    sampleT: [],\n    wtPercent: [],\n  };\n\n  for (let line of lines) {\n    let tmp = line.split(/\\s{3,}/);\n    dataBlock.pressure.push(parseFloat(tmp[0]) * 0.1);\n    dataBlock.gasDensity.push(parseFloat(tmp[1]));\n    dataBlock.pp0.push(parseFloat(tmp[2]));\n    dataBlock.totalWeight.push(parseFloat(tmp[3]));\n    dataBlock.excessAdsorptionPercentage.push(parseFloat(tmp[4]));\n    dataBlock.excessAdsorption.push(parseFloat(tmp[5]));\n    dataBlock.bet.push(parseFloat(tmp[6]));\n    dataBlock.sampleT.push(parseFloat(tmp[7]));\n    dataBlock.wtPercent.push(parseFloat(tmp[8]));\n  }\n  return dataBlock;\n}\n\nfunction parseOneIGA(lines) {\n  const measLen = lines.length;\n  let meta = parseIGAMeasurmentHeader(lines.slice(2, 68));\n  const dataBlock = parseIGADataBlock(lines.slice(72, measLen - 3));\n  meta.scanEnd = lineSplitTrim(lines[measLen - 2]);\n  meta.scanReferenceState = lineSplitTrim(lines[measLen - 1]);\n  return { meta: meta, data: dataBlock };\n}\n/**\n * Creates a new Analysis element\n * @param {string} text - String containing the IGA analysis data, maybe contain multiple measurements\n * @return {Analysis} - New class element with the given data\n */\nexport function fromIGA(text) {\n  const lines = text.split(/[\\r\\n]+/);\n\n  const lineNumbers = getLineNumbersOfMeasurement(lines);\n  let analysis = new Analysis();\n  for (let i = 0; i < lineNumbers[0].length; i++) {\n    let meas = parseOneIGA(lines.slice(lineNumbers[0][i], lineNumbers[1][i]));\n\n    meas.meta.adsorptionT = mean(meas.data.sampleT);\n    meas.meta.adsorptionTUnit = '°C';\n\n    analysis.pushSpectrum(\n      {\n        x: {\n          data: meas.data.pp0,\n          label: 'relative pressure',\n          type: 'independent',\n        },\n        p: {\n          data: meas.data.pressure,\n          label: 'Pressure  [kPa]',\n          type: 'independent',\n        },\n        y: {\n          data: meas.data.excessAdsorption,\n          label: 'Excess Adsorption [mmol/g]',\n          type: 'dependent',\n        },\n        r: {\n          data: meas.data.excessAdsorptionPercentage,\n          label: 'Excess Adsorption [%]',\n          type: 'dependent',\n        },\n        t: {\n          data: meas.data.sampleT,\n          label: 'Sample Temperature [°C]',\n          type: 'independent',\n        },\n      },\n      {\n        dataType: 'Adsorption Isotherm',\n        title: meas.meta.experimentTitle,\n        meta: meas.meta,\n      },\n    );\n  }\n  return analysis;\n}\n\nexport const testables = {\n  getLineNumbersOfMeasurement: getLineNumbersOfMeasurement,\n  parseIGAMeasurmentHeader: parseIGAMeasurmentHeader,\n  parseIGADataBlock: parseIGADataBlock,\n  parseOneIGA: parseOneIGA,\n};\n","import { Analysis } from '..';\n\nimport { lineSplit } from './utils';\n\nfunction parseMetaBlock(lines, dataStartIndex) {\n  let meta = {};\n  for (let i = dataStartIndex - 13; i < dataStartIndex; i++) {\n    if (lines[i].match('Sample: ')) {\n      meta.sample = lineSplit(lines[i])[2].trim();\n    }\n    if (lines[i].match('Operator:  ')) {\n      meta.operator = lineSplit(lines[i])[1].trim();\n    }\n    if (lines[i].match('Submitter: ')) {\n      meta.submitter = lineSplit(lines[i])[1].trim();\n    }\n    if (lines[i].match('File: ')) {\n      meta.file = lineSplit(lines[i])[2].trim();\n    }\n    if (lines[i].match('Started: ')) {\n      meta.started = lineSplit(lines[i])[2].trim();\n    }\n    if (lines[i].match('Analysis adsorptive: ')) {\n      meta.adsorptive = lineSplit(lines[i])[4].trim();\n    }\n    if (lines[i].match('Completed: ')) {\n      meta.completed = lineSplit(lines[i])[2].trim();\n    }\n    if (lines[i].match('Equilibration time: ')) {\n      let time = lineSplit(lines[i])[4].trim().split(' ');\n      meta.equilibrationTime = parseFloat(time[0]);\n      meta.equilibrationTimeUnit = time[1];\n    }\n    if (lines[i].match('Report time: ')) {\n      meta.reportTime = lineSplit(lines[i])[2].trim();\n    }\n    if (lines[i].match('Sample mass: ')) {\n      let mass = lineSplit(lines[i])[2].trim().split(' ');\n      meta.sampleWeight = parseFloat(mass[0]);\n      meta.sampleWeightUnit = mass[1];\n    }\n    if (lines[i].match('Gemini model: ')) {\n      meta.model = lineSplit(lines[i])[4].trim();\n    }\n    if (lines[i].match('Sample density: ')) {\n      let density = lineSplit(lines[i])[3].split(' ');\n      meta.sampleDensity = parseFloat(density[0]);\n      meta.sampleDensityUnit = density[1];\n    }\n    if (lines[i].match('Evac. rate:  ')) {\n      let evacRate = lineSplit(lines[i])[2].split(' ');\n      meta.evacRate = parseFloat(evacRate[0]);\n      meta.evacRateUnit = evacRate[1];\n    }\n  }\n  return meta;\n}\nfunction findDataBlocks(lines) {\n  let isothermTableStarts = [];\n  let isothermTableEnds = [];\n  let isIsothermTable = false;\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].match('Isotherm Tabular Report')) {\n      isIsothermTable = true;\n      isothermTableStarts.push(i);\n    }\n\n    if (isIsothermTable && lines[i].match('Micromeritics')) {\n      isothermTableEnds.push(i);\n      isIsothermTable = false;\n    }\n  }\n\n  return [isothermTableStarts, isothermTableEnds];\n}\nfunction parseIsothermTable(lines) {\n  let pSat = parseFloat(lines[5].trim() * 0.13332); // convert mmHg to kPa\n  let data = {\n    x: [],\n    y: [],\n    p: [],\n  };\n  data.pSat = pSat;\n  let parts;\n  for (let i = 6; i < lines.length; i++) {\n    parts = lineSplit(lines[i]);\n    data.x.push(parseFloat(parts[0]));\n    data.y.push(parseFloat(parts[2]));\n    data.p.push(parseFloat(parts[1]) * 0.13332); // convert mmHg to kPa\n  }\n  return data;\n}\n\nexport function fromMicrometricsTXT(text) {\n  const lines = text.split(/\\r?\\n/).filter((line) => !line.match(/^\\s*$/));\n  let startsAndEnds = findDataBlocks(lines);\n  let analysis = new Analysis();\n  let data;\n  let type = 'Adsorption Isotherm';\n  for (let i = 0; i < startsAndEnds[0].length; i++) {\n    data = parseIsothermTable(\n      lines.slice(startsAndEnds[0][i], startsAndEnds[1][i]),\n    );\n\n    let meta = parseMetaBlock(lines, startsAndEnds[0][i]);\n    meta.pSat = data.pSat;\n\n    if (data.x[1] > data.x[data.x.length - 1]) {\n      type = 'Desorption Isotherm';\n    }\n    analysis.pushSpectrum(\n      {\n        x: {\n          data: data.x,\n          label: 'relative pressure',\n          type: 'independent',\n        },\n        y: {\n          data: data.y,\n          label: 'Excess Adsorption [mmol/g]',\n          type: 'dependent',\n        },\n        p: {\n          data: data.p,\n          label: 'Pressure [kPa]',\n          type: 'independent',\n        },\n      },\n      {\n        dataType: type,\n        title: meta.sample,\n        meta: meta,\n      },\n    );\n  }\n\n  return analysis;\n}\n\nexport const testables = {\n  findDataBlocks: findDataBlocks,\n  parseIsothermTable: parseIsothermTable,\n  parseMetaBlock: parseMetaBlock,\n};\n","/* @license\nPapa Parse\nv5.2.0\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n!function(e,t){\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof module&&\"undefined\"!=typeof exports?module.exports=t():e.Papa=t()}(this,function s(){\"use strict\";var f=\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:void 0!==f?f:{};var n=!f.document&&!!f.postMessage,o=n&&/blob:/i.test((f.location||{}).protocol),a={},h=0,b={parse:function(e,t){var i=(t=t||{}).dynamicTyping||!1;U(i)&&(t.dynamicTypingFunction=i,i={});if(t.dynamicTyping=i,t.transform=!!U(t.transform)&&t.transform,t.worker&&b.WORKERS_SUPPORTED){var r=function(){if(!b.WORKERS_SUPPORTED)return!1;var e=(i=f.URL||f.webkitURL||null,r=s.toString(),b.BLOB_URL||(b.BLOB_URL=i.createObjectURL(new Blob([\"(\",r,\")();\"],{type:\"text/javascript\"})))),t=new f.Worker(e);var i,r;return t.onmessage=_,t.id=h++,a[t.id]=t}();return r.userStep=t.step,r.userChunk=t.chunk,r.userComplete=t.complete,r.userError=t.error,t.step=U(t.step),t.chunk=U(t.chunk),t.complete=U(t.complete),t.error=U(t.error),delete t.worker,void r.postMessage({input:e,config:t,workerId:r.id})}var n=null;b.NODE_STREAM_INPUT,\"string\"==typeof e?n=t.download?new l(t):new p(t):!0===e.readable&&U(e.read)&&U(e.on)?n=new g(t):(f.File&&e instanceof File||e instanceof Object)&&(n=new c(t));return n.stream(e)},unparse:function(e,t){var n=!1,_=!0,m=\",\",v=\"\\r\\n\",s='\"',a=s+s,i=!1,r=null;!function(){if(\"object\"!=typeof t)return;\"string\"!=typeof t.delimiter||b.BAD_DELIMITERS.filter(function(e){return-1!==t.delimiter.indexOf(e)}).length||(m=t.delimiter);(\"boolean\"==typeof t.quotes||\"function\"==typeof t.quotes||Array.isArray(t.quotes))&&(n=t.quotes);\"boolean\"!=typeof t.skipEmptyLines&&\"string\"!=typeof t.skipEmptyLines||(i=t.skipEmptyLines);\"string\"==typeof t.newline&&(v=t.newline);\"string\"==typeof t.quoteChar&&(s=t.quoteChar);\"boolean\"==typeof t.header&&(_=t.header);if(Array.isArray(t.columns)){if(0===t.columns.length)throw new Error(\"Option columns is empty\");r=t.columns}void 0!==t.escapeChar&&(a=t.escapeChar+s)}();var o=new RegExp(q(s),\"g\");\"string\"==typeof e&&(e=JSON.parse(e));if(Array.isArray(e)){if(!e.length||Array.isArray(e[0]))return u(null,e,i);if(\"object\"==typeof e[0])return u(r||h(e[0]),e,i)}else if(\"object\"==typeof e)return\"string\"==typeof e.data&&(e.data=JSON.parse(e.data)),Array.isArray(e.data)&&(e.fields||(e.fields=e.meta&&e.meta.fields),e.fields||(e.fields=Array.isArray(e.data[0])?e.fields:h(e.data[0])),Array.isArray(e.data[0])||\"object\"==typeof e.data[0]||(e.data=[e.data])),u(e.fields||[],e.data||[],i);throw new Error(\"Unable to serialize unrecognized input\");function h(e){if(\"object\"!=typeof e)return[];var t=[];for(var i in e)t.push(i);return t}function u(e,t,i){var r=\"\";\"string\"==typeof e&&(e=JSON.parse(e)),\"string\"==typeof t&&(t=JSON.parse(t));var n=Array.isArray(e)&&0<e.length,s=!Array.isArray(t[0]);if(n&&_){for(var a=0;a<e.length;a++)0<a&&(r+=m),r+=y(e[a],a);0<t.length&&(r+=v)}for(var o=0;o<t.length;o++){var h=n?e.length:t[o].length,u=!1,f=n?0===Object.keys(t[o]).length:0===t[o].length;if(i&&!n&&(u=\"greedy\"===i?\"\"===t[o].join(\"\").trim():1===t[o].length&&0===t[o][0].length),\"greedy\"===i&&n){for(var d=[],l=0;l<h;l++){var c=s?e[l]:l;d.push(t[o][c])}u=\"\"===d.join(\"\").trim()}if(!u){for(var p=0;p<h;p++){0<p&&!f&&(r+=m);var g=n&&s?e[p]:p;r+=y(t[o][g],p)}o<t.length-1&&(!i||0<h&&!f)&&(r+=v)}}return r}function y(e,t){if(null==e)return\"\";if(e.constructor===Date)return JSON.stringify(e).slice(1,25);var i=e.toString().replace(o,a),r=\"boolean\"==typeof n&&n||\"function\"==typeof n&&n(e,t)||Array.isArray(n)&&n[t]||function(e,t){for(var i=0;i<t.length;i++)if(-1<e.indexOf(t[i]))return!0;return!1}(i,b.BAD_DELIMITERS)||-1<i.indexOf(m)||\" \"===i.charAt(0)||\" \"===i.charAt(i.length-1);return r?s+i+s:i}}};if(b.RECORD_SEP=String.fromCharCode(30),b.UNIT_SEP=String.fromCharCode(31),b.BYTE_ORDER_MARK=\"\\ufeff\",b.BAD_DELIMITERS=[\"\\r\",\"\\n\",'\"',b.BYTE_ORDER_MARK],b.WORKERS_SUPPORTED=!n&&!!f.Worker,b.NODE_STREAM_INPUT=1,b.LocalChunkSize=10485760,b.RemoteChunkSize=5242880,b.DefaultDelimiter=\",\",b.Parser=w,b.ParserHandle=i,b.NetworkStreamer=l,b.FileStreamer=c,b.StringStreamer=p,b.ReadableStreamStreamer=g,f.jQuery){var d=f.jQuery;d.fn.parse=function(o){var i=o.config||{},h=[];return this.each(function(e){if(!(\"INPUT\"===d(this).prop(\"tagName\").toUpperCase()&&\"file\"===d(this).attr(\"type\").toLowerCase()&&f.FileReader)||!this.files||0===this.files.length)return!0;for(var t=0;t<this.files.length;t++)h.push({file:this.files[t],inputElem:this,instanceConfig:d.extend({},i)})}),e(),this;function e(){if(0!==h.length){var e,t,i,r,n=h[0];if(U(o.before)){var s=o.before(n.file,n.inputElem);if(\"object\"==typeof s){if(\"abort\"===s.action)return e=\"AbortError\",t=n.file,i=n.inputElem,r=s.reason,void(U(o.error)&&o.error({name:e},t,i,r));if(\"skip\"===s.action)return void u();\"object\"==typeof s.config&&(n.instanceConfig=d.extend(n.instanceConfig,s.config))}else if(\"skip\"===s)return void u()}var a=n.instanceConfig.complete;n.instanceConfig.complete=function(e){U(a)&&a(e,n.file,n.inputElem),u()},b.parse(n.file,n.instanceConfig)}else U(o.complete)&&o.complete()}function u(){h.splice(0,1),e()}}}function u(e){this._handle=null,this._finished=!1,this._completed=!1,this._halted=!1,this._input=null,this._baseIndex=0,this._partialLine=\"\",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var t=E(e);t.chunkSize=parseInt(t.chunkSize),e.step||e.chunk||(t.chunkSize=null);this._handle=new i(t),(this._handle.streamer=this)._config=t}.call(this,e),this.parseChunk=function(e,t){if(this.isFirstChunk&&U(this._config.beforeFirstChunk)){var i=this._config.beforeFirstChunk(e);void 0!==i&&(e=i)}this.isFirstChunk=!1,this._halted=!1;var r=this._partialLine+e;this._partialLine=\"\";var n=this._handle.parse(r,this._baseIndex,!this._finished);if(!this._handle.paused()&&!this._handle.aborted()){var s=n.meta.cursor;this._finished||(this._partialLine=r.substring(s-this._baseIndex),this._baseIndex=s),n&&n.data&&(this._rowCount+=n.data.length);var a=this._finished||this._config.preview&&this._rowCount>=this._config.preview;if(o)f.postMessage({results:n,workerId:b.WORKER_ID,finished:a});else if(U(this._config.chunk)&&!t){if(this._config.chunk(n,this._handle),this._handle.paused()||this._handle.aborted())return void(this._halted=!0);n=void 0,this._completeResults=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(n.data),this._completeResults.errors=this._completeResults.errors.concat(n.errors),this._completeResults.meta=n.meta),this._completed||!a||!U(this._config.complete)||n&&n.meta.aborted||(this._config.complete(this._completeResults,this._input),this._completed=!0),a||n&&n.meta.paused||this._nextChunk(),n}this._halted=!0},this._sendError=function(e){U(this._config.error)?this._config.error(e):o&&this._config.error&&f.postMessage({workerId:b.WORKER_ID,error:e,finished:!1})}}function l(e){var r;(e=e||{}).chunkSize||(e.chunkSize=b.RemoteChunkSize),u.call(this,e),this._nextChunk=n?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(e){this._input=e,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(r=new XMLHttpRequest,this._config.withCredentials&&(r.withCredentials=this._config.withCredentials),n||(r.onload=y(this._chunkLoaded,this),r.onerror=y(this._chunkError,this)),r.open(this._config.downloadRequestBody?\"POST\":\"GET\",this._input,!n),this._config.downloadRequestHeaders){var e=this._config.downloadRequestHeaders;for(var t in e)r.setRequestHeader(t,e[t])}if(this._config.chunkSize){var i=this._start+this._config.chunkSize-1;r.setRequestHeader(\"Range\",\"bytes=\"+this._start+\"-\"+i)}try{r.send(this._config.downloadRequestBody)}catch(e){this._chunkError(e.message)}n&&0===r.status&&this._chunkError()}},this._chunkLoaded=function(){4===r.readyState&&(r.status<200||400<=r.status?this._chunkError():(this._start+=this._config.chunkSize?this._config.chunkSize:r.responseText.length,this._finished=!this._config.chunkSize||this._start>=function(e){var t=e.getResponseHeader(\"Content-Range\");if(null===t)return-1;return parseInt(t.substring(t.lastIndexOf(\"/\")+1))}(r),this.parseChunk(r.responseText)))},this._chunkError=function(e){var t=r.statusText||e;this._sendError(new Error(t))}}function c(e){var r,n;(e=e||{}).chunkSize||(e.chunkSize=b.LocalChunkSize),u.call(this,e);var s=\"undefined\"!=typeof FileReader;this.stream=function(e){this._input=e,n=e.slice||e.webkitSlice||e.mozSlice,s?((r=new FileReader).onload=y(this._chunkLoaded,this),r.onerror=y(this._chunkError,this)):r=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var e=this._input;if(this._config.chunkSize){var t=Math.min(this._start+this._config.chunkSize,this._input.size);e=n.call(e,this._start,t)}var i=r.readAsText(e,this._config.encoding);s||this._chunkLoaded({target:{result:i}})},this._chunkLoaded=function(e){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(e.target.result)},this._chunkError=function(){this._sendError(r.error)}}function p(e){var i;u.call(this,e=e||{}),this.stream=function(e){return i=e,this._nextChunk()},this._nextChunk=function(){if(!this._finished){var e,t=this._config.chunkSize;return t?(e=i.substring(0,t),i=i.substring(t)):(e=i,i=\"\"),this._finished=!i,this.parseChunk(e)}}}function g(e){u.call(this,e=e||{});var t=[],i=!0,r=!1;this.pause=function(){u.prototype.pause.apply(this,arguments),this._input.pause()},this.resume=function(){u.prototype.resume.apply(this,arguments),this._input.resume()},this.stream=function(e){this._input=e,this._input.on(\"data\",this._streamData),this._input.on(\"end\",this._streamEnd),this._input.on(\"error\",this._streamError)},this._checkIsFinished=function(){r&&1===t.length&&(this._finished=!0)},this._nextChunk=function(){this._checkIsFinished(),t.length?this.parseChunk(t.shift()):i=!0},this._streamData=y(function(e){try{t.push(\"string\"==typeof e?e:e.toString(this._config.encoding)),i&&(i=!1,this._checkIsFinished(),this.parseChunk(t.shift()))}catch(e){this._streamError(e)}},this),this._streamError=y(function(e){this._streamCleanUp(),this._sendError(e)},this),this._streamEnd=y(function(){this._streamCleanUp(),r=!0,this._streamData(\"\")},this),this._streamCleanUp=y(function(){this._input.removeListener(\"data\",this._streamData),this._input.removeListener(\"end\",this._streamEnd),this._input.removeListener(\"error\",this._streamError)},this)}function i(m){var a,o,h,r=Math.pow(2,53),n=-r,s=/^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)(e[-+]?\\d+)?\\s*$/,u=/(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/,t=this,i=0,f=0,d=!1,e=!1,l=[],c={data:[],errors:[],meta:{}};if(U(m.step)){var p=m.step;m.step=function(e){if(c=e,_())g();else{if(g(),0===c.data.length)return;i+=e.data.length,m.preview&&i>m.preview?o.abort():(c.data=c.data[0],p(c,t))}}}function v(e){return\"greedy\"===m.skipEmptyLines?\"\"===e.join(\"\").trim():1===e.length&&0===e[0].length}function g(){if(c&&h&&(k(\"Delimiter\",\"UndetectableDelimiter\",\"Unable to auto-detect delimiting character; defaulted to '\"+b.DefaultDelimiter+\"'\"),h=!1),m.skipEmptyLines)for(var e=0;e<c.data.length;e++)v(c.data[e])&&c.data.splice(e--,1);return _()&&function(){if(!c)return;function e(e){U(m.transformHeader)&&(e=m.transformHeader(e)),l.push(e)}if(Array.isArray(c.data[0])){for(var t=0;_()&&t<c.data.length;t++)c.data[t].forEach(e);c.data.splice(0,1)}else c.data.forEach(e)}(),function(){if(!c||!m.header&&!m.dynamicTyping&&!m.transform)return c;function e(e,t){var i,r=m.header?{}:[];for(i=0;i<e.length;i++){var n=i,s=e[i];m.header&&(n=i>=l.length?\"__parsed_extra\":l[i]),m.transform&&(s=m.transform(s,n)),s=y(n,s),\"__parsed_extra\"===n?(r[n]=r[n]||[],r[n].push(s)):r[n]=s}return m.header&&(i>l.length?k(\"FieldMismatch\",\"TooManyFields\",\"Too many fields: expected \"+l.length+\" fields but parsed \"+i,f+t):i<l.length&&k(\"FieldMismatch\",\"TooFewFields\",\"Too few fields: expected \"+l.length+\" fields but parsed \"+i,f+t)),r}var t=1;!c.data.length||Array.isArray(c.data[0])?(c.data=c.data.map(e),t=c.data.length):c.data=e(c.data,0);m.header&&c.meta&&(c.meta.fields=l);return f+=t,c}()}function _(){return m.header&&0===l.length}function y(e,t){return i=e,m.dynamicTypingFunction&&void 0===m.dynamicTyping[i]&&(m.dynamicTyping[i]=m.dynamicTypingFunction(i)),!0===(m.dynamicTyping[i]||m.dynamicTyping)?\"true\"===t||\"TRUE\"===t||\"false\"!==t&&\"FALSE\"!==t&&(function(e){if(s.test(e)){var t=parseFloat(e);if(n<t&&t<r)return!0}return!1}(t)?parseFloat(t):u.test(t)?new Date(t):\"\"===t?null:t):t;var i}function k(e,t,i,r){var n={type:e,code:t,message:i};void 0!==r&&(n.row=r),c.errors.push(n)}this.parse=function(e,t,i){var r=m.quoteChar||'\"';if(m.newline||(m.newline=function(e,t){e=e.substring(0,1048576);var i=new RegExp(q(t)+\"([^]*?)\"+q(t),\"gm\"),r=(e=e.replace(i,\"\")).split(\"\\r\"),n=e.split(\"\\n\"),s=1<n.length&&n[0].length<r[0].length;if(1===r.length||s)return\"\\n\";for(var a=0,o=0;o<r.length;o++)\"\\n\"===r[o][0]&&a++;return a>=r.length/2?\"\\r\\n\":\"\\r\"}(e,r)),h=!1,m.delimiter)U(m.delimiter)&&(m.delimiter=m.delimiter(e),c.meta.delimiter=m.delimiter);else{var n=function(e,t,i,r,n){var s,a,o,h;n=n||[\",\",\"\\t\",\"|\",\";\",b.RECORD_SEP,b.UNIT_SEP];for(var u=0;u<n.length;u++){var f=n[u],d=0,l=0,c=0;o=void 0;for(var p=new w({comments:r,delimiter:f,newline:t,preview:10}).parse(e),g=0;g<p.data.length;g++)if(i&&v(p.data[g]))c++;else{var _=p.data[g].length;l+=_,void 0!==o?0<_&&(d+=Math.abs(_-o),o=_):o=_}0<p.data.length&&(l/=p.data.length-c),(void 0===a||d<=a)&&(void 0===h||h<l)&&1.99<l&&(a=d,s=f,h=l)}return{successful:!!(m.delimiter=s),bestDelimiter:s}}(e,m.newline,m.skipEmptyLines,m.comments,m.delimitersToGuess);n.successful?m.delimiter=n.bestDelimiter:(h=!0,m.delimiter=b.DefaultDelimiter),c.meta.delimiter=m.delimiter}var s=E(m);return m.preview&&m.header&&s.preview++,a=e,o=new w(s),c=o.parse(a,t,i),g(),d?{meta:{paused:!0}}:c||{meta:{paused:!1}}},this.paused=function(){return d},this.pause=function(){d=!0,o.abort(),a=U(m.chunk)?\"\":a.substring(o.getCharIndex())},this.resume=function(){t.streamer._halted?(d=!1,t.streamer.parseChunk(a,!0)):setTimeout(t.resume,3)},this.aborted=function(){return e},this.abort=function(){e=!0,o.abort(),c.meta.aborted=!0,U(m.complete)&&m.complete(c),a=\"\"}}function q(e){return e.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\")}function w(e){var O,D=(e=e||{}).delimiter,I=e.newline,T=e.comments,A=e.step,L=e.preview,F=e.fastMode,z=O=void 0===e.quoteChar?'\"':e.quoteChar;if(void 0!==e.escapeChar&&(z=e.escapeChar),(\"string\"!=typeof D||-1<b.BAD_DELIMITERS.indexOf(D))&&(D=\",\"),T===D)throw new Error(\"Comment character same as delimiter\");!0===T?T=\"#\":(\"string\"!=typeof T||-1<b.BAD_DELIMITERS.indexOf(T))&&(T=!1),\"\\n\"!==I&&\"\\r\"!==I&&\"\\r\\n\"!==I&&(I=\"\\n\");var M=0,j=!1;this.parse=function(a,t,i){if(\"string\"!=typeof a)throw new Error(\"Input must be a string\");var r=a.length,e=D.length,n=I.length,s=T.length,o=U(A),h=[],u=[],f=[],d=M=0;if(!a)return R();if(F||!1!==F&&-1===a.indexOf(O)){for(var l=a.split(I),c=0;c<l.length;c++){if(f=l[c],M+=f.length,c!==l.length-1)M+=I.length;else if(i)return R();if(!T||f.substring(0,s)!==T){if(o){if(h=[],b(f.split(D)),S(),j)return R()}else b(f.split(D));if(L&&L<=c)return h=h.slice(0,L),R(!0)}}return R()}for(var p=a.indexOf(D,M),g=a.indexOf(I,M),_=new RegExp(q(z)+q(O),\"g\"),m=a.indexOf(O,M);;)if(a[M]!==O)if(T&&0===f.length&&a.substring(M,M+s)===T){if(-1===g)return R();M=g+n,g=a.indexOf(I,M),p=a.indexOf(D,M)}else{if(-1!==p&&(p<g||-1===g)){if(!(p<m)){f.push(a.substring(M,p)),M=p+e,p=a.indexOf(D,M);continue}var v=x(p,m,g);if(v&&void 0!==v.nextDelim){p=v.nextDelim,m=v.quoteSearch,f.push(a.substring(M,p)),M=p+e,p=a.indexOf(D,M);continue}}if(-1===g)break;if(f.push(a.substring(M,g)),C(g+n),o&&(S(),j))return R();if(L&&h.length>=L)return R(!0)}else for(m=M,M++;;){if(-1===(m=a.indexOf(O,m+1)))return i||u.push({type:\"Quotes\",code:\"MissingQuotes\",message:\"Quoted field unterminated\",row:h.length,index:M}),E();if(m===r-1)return E(a.substring(M,m).replace(_,O));if(O!==z||a[m+1]!==z){if(O===z||0===m||a[m-1]!==z){-1!==p&&p<m+1&&(p=a.indexOf(D,m+1)),-1!==g&&g<m+1&&(g=a.indexOf(I,m+1));var y=w(-1===g?p:Math.min(p,g));if(a[m+1+y]===D){f.push(a.substring(M,m).replace(_,O)),a[M=m+1+y+e]!==O&&(m=a.indexOf(O,M)),p=a.indexOf(D,M),g=a.indexOf(I,M);break}var k=w(g);if(a.substring(m+1+k,m+1+k+n)===I){if(f.push(a.substring(M,m).replace(_,O)),C(m+1+k+n),p=a.indexOf(D,M),m=a.indexOf(O,M),o&&(S(),j))return R();if(L&&h.length>=L)return R(!0);break}u.push({type:\"Quotes\",code:\"InvalidQuotes\",message:\"Trailing quote on quoted field is malformed\",row:h.length,index:M}),m++}}else m++}return E();function b(e){h.push(e),d=M}function w(e){var t=0;if(-1!==e){var i=a.substring(m+1,e);i&&\"\"===i.trim()&&(t=i.length)}return t}function E(e){return i||(void 0===e&&(e=a.substring(M)),f.push(e),M=r,b(f),o&&S()),R()}function C(e){M=e,b(f),f=[],g=a.indexOf(I,M)}function R(e){return{data:h,errors:u,meta:{delimiter:D,linebreak:I,aborted:j,truncated:!!e,cursor:d+(t||0)}}}function S(){A(R()),h=[],u=[]}function x(e,t,i){var r={nextDelim:void 0,quoteSearch:void 0},n=a.indexOf(O,t+1);if(t<e&&e<n&&(n<i||-1===i)){var s=a.indexOf(D,n);if(-1===s)return r;n<s&&(n=a.indexOf(O,n+1)),r=x(s,n,i)}else r={nextDelim:e,quoteSearch:t};return r}},this.abort=function(){j=!0},this.getCharIndex=function(){return M}}function _(e){var t=e.data,i=a[t.workerId],r=!1;if(t.error)i.userError(t.error,t.file);else if(t.results&&t.results.data){var n={abort:function(){r=!0,m(t.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:v,resume:v};if(U(i.userStep)){for(var s=0;s<t.results.data.length&&(i.userStep({data:t.results.data[s],errors:t.results.errors,meta:t.results.meta},n),!r);s++);delete t.results}else U(i.userChunk)&&(i.userChunk(t.results,n,t.file),delete t.results)}t.finished&&!r&&m(t.workerId,t.results)}function m(e,t){var i=a[e];U(i.userComplete)&&i.userComplete(t),i.terminate(),delete a[e]}function v(){throw new Error(\"Not implemented.\")}function E(e){if(\"object\"!=typeof e||null===e)return e;var t=Array.isArray(e)?[]:{};for(var i in e)t[i]=E(e[i]);return t}function y(e,t){return function(){e.apply(t,arguments)}}function U(e){return\"function\"==typeof e}return o&&(f.onmessage=function(e){var t=e.data;void 0===b.WORKER_ID&&t&&(b.WORKER_ID=t.workerId);if(\"string\"==typeof t.input)f.postMessage({workerId:b.WORKER_ID,results:b.parse(t.input,t.config),finished:!0});else if(f.File&&t.input instanceof File||t.input instanceof Object){var i=b.parse(t.input,t.config);i&&f.postMessage({workerId:b.WORKER_ID,results:i,finished:!0})}}),(l.prototype=Object.create(u.prototype)).constructor=l,(c.prototype=Object.create(u.prototype)).constructor=c,(p.prototype=Object.create(p.prototype)).constructor=p,(g.prototype=Object.create(u.prototype)).constructor=g,b});","export const idealGasConstant = 22.413969545014; // mol / cm3 at STP\n","import { Analysis } from '..';\n\nimport { idealGasConstant } from './constants';\n\nconst {\n  readFile,\n  utils: { encode_cell },\n} = require('xlsx');\n\nfunction valueElseUndefined(cell) {\n  return cell ? cell.v : undefined;\n}\n\nfunction valueElseUndefinedFloat(cell) {\n  return cell ? parseFloat(cell.v) : undefined;\n}\n\nfunction valueElseUndefinedInt(cell) {\n  return cell ? parseFloat(cell.v) : undefined;\n}\n\nfunction valueElseUndefinedStripUnit(cell) {\n  let val = cell ? cell.v : undefined;\n  return val.replace(']', '').replace('[', '');\n}\n\nfunction getAdsDesMeta(adsDesSheet) {\n  let metaData = {};\n  metaData.fileName = valueElseUndefined(adsDesSheet.C2);\n  metaData.date = valueElseUndefined(adsDesSheet.C3);\n  metaData.time = valueElseUndefined(adsDesSheet.C4);\n  metaData.comment1 = valueElseUndefined(adsDesSheet.C5);\n  metaData.comment2 = valueElseUndefined(adsDesSheet.C6);\n  metaData.comment3 = valueElseUndefined(adsDesSheet.C7);\n  metaData.comment4 = valueElseUndefined(adsDesSheet.C8);\n  metaData.serialNumber = valueElseUndefined(adsDesSheet.C9);\n  metaData.version = valueElseUndefined(adsDesSheet.C10);\n  metaData.sampleWeight = valueElseUndefinedFloat(adsDesSheet.C12);\n  metaData.sampleWeightUnit = valueElseUndefinedStripUnit(adsDesSheet.D12);\n  metaData.standardVolume = valueElseUndefinedFloat(adsDesSheet.C13);\n  metaData.standardVolumeUnit = valueElseUndefinedStripUnit(adsDesSheet.D13);\n  metaData.deadVolume = valueElseUndefinedFloat(adsDesSheet.C14);\n  metaData.deadVolumeUnit = valueElseUndefinedStripUnit(adsDesSheet.D14);\n  metaData.equilibriumTime = valueElseUndefinedFloat(adsDesSheet.C15);\n  metaData.equilibriumTimeUnit = valueElseUndefinedStripUnit(adsDesSheet.D15);\n  metaData.adsorptive = valueElseUndefined(adsDesSheet.C16);\n  metaData.apparatusT = valueElseUndefined(adsDesSheet.C17);\n  metaData.apparatusTUnit = valueElseUndefinedStripUnit(adsDesSheet.D17);\n  metaData.adsorptionT = valueElseUndefinedFloat(adsDesSheet.C18);\n  metaData.adsorptionTUnit = valueElseUndefinedStripUnit(adsDesSheet.D18);\n  metaData.saturatedVaporPressure = valueElseUndefinedFloat(adsDesSheet.H12);\n  metaData.saturatedVaporPressureUnit = valueElseUndefinedStripUnit(\n    adsDesSheet.I12,\n  );\n  metaData.adsorptionCrossSectionArea = valueElseUndefinedFloat(\n    adsDesSheet.H13,\n  );\n  metaData.adsorptionCrossSectionAreaUnit = valueElseUndefinedStripUnit(\n    adsDesSheet.I13,\n  );\n  metaData.adsorptionPoints = valueElseUndefinedInt(adsDesSheet.H17);\n  metaData.desorptionPoints = valueElseUndefinedInt(adsDesSheet.H18);\n  return metaData;\n}\n\nfunction parseIsothermBlock(worksheet, range) {\n  let data = {\n    pi: [],\n    pe: [],\n    pe2: [],\n    p0: [],\n    pp0: [],\n    va: [],\n  };\n\n  const adresses = [data.pi, data.pe, data.pe2, data.p0, data.pp0, data.va];\n\n  for (let R = range.s.r; R <= range.e.r; ++R) {\n    let counter = 0;\n    for (let C = range.s.c; C <= range.e.c; ++C) {\n      let cellAddress = { c: C, r: R };\n      let cellRef = encode_cell(cellAddress);\n      adresses[counter].push(valueElseUndefinedFloat(worksheet[cellRef]));\n      counter++;\n    }\n  }\n\n  data.va = data.va.map(function (x) {\n    return (x / idealGasConstant) * 1000;\n  });\n\n  return data;\n}\n\nfunction parseAdsDesData(worksheet, adsorptionPoints, desorptionPoints) {\n  // traverse the sheet\n  const rangeAds = {\n    s: { c: 1, r: 22 },\n    e: { c: 6, r: 22 + adsorptionPoints - 1 },\n  };\n\n  const rangeDes = {\n    s: { c: 1, r: 22 + adsorptionPoints + 1 },\n    e: { c: 6, r: 22 + adsorptionPoints + desorptionPoints },\n  };\n\n  const adsData = parseIsothermBlock(worksheet, rangeAds);\n  const desData = parseIsothermBlock(worksheet, rangeDes);\n\n  return {\n    adsorption: adsData,\n    desorption: desData,\n  };\n}\n\nexport function fromBelsorp(path) {\n  const workbook = readFile(path);\n\n  const adsDesSheet = workbook.Sheets.AdsDes;\n\n  let metaData = getAdsDesMeta(adsDesSheet);\n\n  let data = parseAdsDesData(\n    adsDesSheet,\n    metaData.adsorptionPoints,\n    metaData.desorptionPoints,\n  );\n\n  let analysis = new Analysis();\n\n  analysis.pushSpectrum(\n    {\n      x: {\n        data: data.adsorption.pp0,\n        label: 'relative pressure',\n        type: 'independent',\n      },\n      p: {\n        data: data.adsorption.pe,\n        label: 'Pressure  [kPa]',\n        type: 'independent',\n      },\n      y: {\n        data: data.adsorption.va,\n        label: 'Excess adsorption mmol /g',\n        type: 'dependent',\n      },\n    },\n    {\n      dataType: 'Adsorption Isotherm',\n      title: metaData.comment1,\n      meta: metaData,\n    },\n  );\n\n  analysis.pushSpectrum(\n    {\n      x: {\n        data: data.desorption.pp0,\n        label: 'relative pressure',\n      },\n      p: {\n        data: data.desorption.pe,\n        label: 'Pressure  [kPa]',\n      },\n      y: {\n        data: data.desorption.va,\n        label: 'Excess adsorption mmol /g',\n      },\n    },\n    {\n      dataType: 'Desorption Isotherm',\n      title: metaData.comment1,\n      meta: metaData,\n    },\n  );\n\n  return analysis;\n}\n\nexport const testables = {\n  parseIsothermBlock: parseIsothermBlock,\n  getAdsDesMeta: getAdsDesMeta,\n  parseAdsDesData: parseAdsDesData,\n};\n","export class AnalysesManager {\n  constructor() {\n    this.analyses = [];\n  }\n\n  addAnalysis(analysis) {\n    let index = this.getAnalysisIndex(analysis.id);\n    if (index === undefined) {\n      this.analyses.push(analysis);\n    } else {\n      this.analyses[index] = analysis;\n    }\n  }\n\n  getAnalyses(options = {}) {\n    const { ids } = options;\n    let analyses = [];\n    for (const analysis of this.analyses) {\n      if (!ids || ids.includes(analysis.id)) {\n        analyses.push(analysis);\n      }\n    }\n    return analyses;\n  }\n\n  /**\n   * Remove the analysis from the AnalysesManager for the specified id\n   * @param {string} id\n   */\n  removeAnalysis(id) {\n    let index = this.getAnalysisIndex(id);\n    if (index === undefined) return undefined;\n    return this.analyses.splice(index, 1);\n  }\n\n  /**\n   * Returns the index of the analysis in the analyses array\n   * @param {string} id\n   * @returns {number}\n   */\n  getAnalysisIndex(id) {\n    if (!id) return undefined;\n    for (let i = 0; i < this.analyses.length; i++) {\n      let analysis = this.analyses[i];\n      if (analysis.id === id) return i;\n    }\n    return undefined;\n  }\n\n  /**\n   * Checks if the ID of an analysis exists in the AnalysesManager\n   * @param {string} id\n   */\n  includes(id) {\n    return !isNaN(this.getAnalysisIndex(id));\n  }\n}\n","import sum from 'ml-array-sum';\n\n/**\n * Computes the mean of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction mean(input) {\n  return sum(input) / input.length;\n}\n\nexport default mean;\n","import { convert } from 'jcampconverter';\n\nimport { Analysis } from '../Analysis';\n\n/**\n * Creates a new Analysis from a JCAMP string\n * @param {string} jcamp - String containing the JCAMP data\n * @param {object} [options={}]\n * @param {object} [options.id=Math.random()]\n * @param {string} [options.label=options.id] human redeable label\n * @return {Analysis} - New class element with the given data\n */\nexport function fromJcamp(jcamp, options = {}) {\n  let analysis = new Analysis(options);\n  addJcamp(analysis, jcamp, options);\n  return analysis;\n}\n\nfunction addJcamp(analysis, jcamp) {\n  let converted = convert(jcamp, {\n    keepRecordsRegExp: /.*/,\n  });\n\n  for (let entry of converted.flatten) {\n    let currentSpectrum = entry.spectra[0];\n\n    // we ensure variables\n    if (!currentSpectrum.variables) {\n      const variables = {};\n      currentSpectrum.variables = variables;\n      variables.x = {\n        label: currentSpectrum.xUnits,\n        symbol: 'X',\n        data: currentSpectrum.data.x || currentSpectrum.data.X,\n      };\n      variables.y = {\n        label: currentSpectrum.yUnits,\n        symbol: 'Y',\n        data: currentSpectrum.data.y || currentSpectrum.data.Y,\n      };\n    } else {\n      for (let key in currentSpectrum.variables) {\n        const variable = currentSpectrum.variables[key];\n        if (variable.label) continue;\n        variable.label = variable.name || variable.symbol || key;\n        if (variable.units && !variable.label.includes(variable.units)) {\n          variable.label += ` [${variable.units}]`;\n        }\n      }\n    }\n\n    analysis.pushSpectrum(currentSpectrum.variables, {\n      dataType: entry.dataType,\n      title: entry.title,\n      meta: entry.meta,\n    });\n  }\n}\n","import Papa from 'papaparse';\n\nimport { Analysis } from '..';\n\nimport { idealGasConstant } from './constants';\n\nexport function fromMicrometricsCSV(text) {\n  text = text.replace(/,/g, '.');\n  let parsed = Papa.parse(text, {\n    delimiter: ';',\n    dynamicTyping: false,\n    skipEmptyLines: true,\n  }).data;\n\n  const arrayColumn = (arr, n) => arr.map((x) => x[n]);\n\n  const headerRow = parsed.shift();\n  let analyses = [];\n\n  let analysis = new Analysis();\n\n  analysis.pushSpectrum(\n    {\n      x: {\n        data: arrayColumn(parsed, 0)\n          .filter(function (value) {\n            return value !== '';\n          })\n          .map(function (x) {\n            return parseFloat(x);\n          }),\n        label: 'relative pressure p/p0',\n      },\n      y: {\n        data: arrayColumn(parsed, 1)\n          .filter(function (value) {\n            return value !== '';\n          })\n          .map(function (x) {\n            return (parseFloat(x) / idealGasConstant) * 1000;\n          }),\n        label: 'Excess adsorption mmol /g',\n      },\n    },\n    {\n      dataType: 'Adsorption Isotherm',\n      title: 'Adsorption',\n      meta: { header: headerRow },\n    },\n  );\n\n  analyses.push(analysis);\n\n  let desorption = new Analysis();\n  desorption.pushSpectrum(\n    {\n      x: {\n        data: arrayColumn(parsed, 2)\n          .filter(function (value) {\n            return value !== '';\n          })\n          .map(function (x) {\n            return parseFloat(x);\n          }),\n        label: 'relative pressure p/p0',\n        type: 'independent',\n      },\n      y: {\n        data: arrayColumn(parsed, 3)\n          .filter(function (value) {\n            return value !== '';\n          })\n          .map(function (x) {\n            return (parseFloat(x) / idealGasConstant) * 1000;\n          }),\n        label: 'Excess adsorption mmol /g',\n        type: 'dependent',\n      },\n    },\n    {\n      dataType: 'Desorption Isotherm',\n      title: 'Desorption',\n      meta: {},\n    },\n  );\n\n  analyses.push(desorption);\n\n  return analyses;\n}\n","import { addStyle } from './addStyle';\nimport { COLORS } from './colors';\n/**\n * Generate a jsgraph chart format from an array of Analysis\n * @param {Array<Analysis>} analyses\n * @param {object} [options={}]\n * @param {Array} [options.ids] List of spectra ids, by all\n * @param {Array} [options.colors] List of colors\n * @param {object} [options.selector={}]\n * @param {object} [options.normalization]\n */\nexport function getJSGraph(analyses, options = {}) {\n  const { colors = COLORS, selector, normalization } = options;\n  let series = [];\n\n  let xLabel = '';\n  let yLabel = '';\n\n  for (let i = 0; i < analyses.length; i++) {\n    const analysis = analyses[i];\n    let serie = {};\n    let currentData = analysis.getNormalizedData({\n      selector,\n      normalization,\n    });\n    if (!currentData) continue;\n    if (!xLabel) xLabel = analysis.getXLabel(selector);\n    if (!yLabel) yLabel = analysis.getYLabel(selector);\n    addStyle(serie, analysis, { color: colors[i] });\n    serie.data = currentData;\n    series.push(serie);\n  }\n  return {\n    axes: {\n      x: {\n        label: xLabel,\n        unit: '',\n        unitWrapperBefore: '',\n        unitWrapperAfter: '',\n        flipped: false,\n        display: true,\n      },\n      y: {\n        label: yLabel,\n        unit: '',\n        unitWrapperBefore: '',\n        unitWrapperAfter: '',\n        flipped: false,\n        display: true,\n      },\n    },\n    series,\n  };\n}\n","export function getNormalizationAnnotations(filter = {}, boundary) {\n  let { exclusions = [] } = filter;\n  let annotations = [];\n  exclusions = exclusions.filter((exclusion) => !exclusion.ignore);\n  annotations = exclusions.map((exclusion) => {\n    let annotation = {\n      type: 'rect',\n      position: [\n        { x: exclusion.from, y: boundary.y.min },\n        { x: exclusion.to, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    };\n    return annotation;\n  });\n  if (filter.from !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: Number.MIN_SAFE_INTEGER, y: boundary.y.min },\n        { x: filter.from, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  if (filter.to !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: filter.to, y: boundary.y.min },\n        { x: Number.MAX_SAFE_INTEGER, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  return annotations;\n}\n"],"names":["toString","Object","prototype","isAnyArray","object","call","endsWith","max","input","isArray","TypeError","length","maxValue","i","sum","sumValue","norm","output","options","arguments","undefined","_options$algorithm","algorithm","_options$sumValue","_options$maxValue","Error","Array","toLowerCase","absoluteSumValue","absoluteSum","slice","currentMaxValue","factor","_i","sumFactor","_i2","concat","Math","abs","min","minValue","rescale","currentMin","currentMax","RangeError","_options$min","autoMinMax","_options$max","_typeof","obj","Symbol","iterator","constructor","sequentialFill","_options","_options$from","from","_options$to","to","_options$size","size","step","floor","push","normalize","zones","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","JSON","parse","stringify","map","zone","sort","a","b","forEach","filter","currentZone","result","integral","x0","x1","slope","intercept","equallySpaced","arrayXY","x","y","xLength","reverse","variant","numberOfPoints","exclusions","isNaN","exclusion","nextExclusion","invert","unitsPerPoint","reduce","previous","current","currentTotal","round","zonesWithPoints","xResult","yResult","zoneResult","processZone","halfStep","lastStep","start","previousX","MAX_VALUE","previousY","nextX","nextY","frontOutsideSpectra","backOutsideSpectra","currentValue","currentPoints","j","main","equallySpacedSlot","initialOriginalStep","lastOriginalStep","MIN_VALUE","sumAtMin","sumAtMax","add","equallySpacedSmooth","filterX","points","currentFrom","getZones","currentZoneIndex","newX","newY","position","indent","repeat","indentData","inspectMatrixWithOptions","matrix","maxRows","maxColumns","maxNumSize","name","rows","columns","maxI","maxJ","line","formatNumber","get","join","inspectData","num","numStr","String","padEnd","precise","toPrecision","exponential","toExponential","eIndex","indexOf","e","checkRowIndex","index","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkRowIndices","rowIndices","some","r","checkColumnIndices","columnIndices","c","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","value","array","AbstractMatrix","newRows","newColumns","newData","newMatrix","Matrix","row","column","set","fill","random","isInteger","interval","this","zeros","data","l","matrix1","matrix2","checkMatrix","isMatrix","klass","apply","callback","to2DArray","copy","toJSON","isRowVector","isColumnVector","isVector","isSquare","isSymmetric","isEchelonForm","previousColumn","checked","isReducedEchelonForm","k","echelonForm","clone","h","iMax","swapRows","tmp","reducedEchelonForm","m","n","maxRow","p","pivot","setSubMatrix","neg","mulS","getRow","getRowVector","rowVector","setRow","row1","row2","temp","getColumn","getColumnVector","columnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","v","maxIndex","idx","minIndex","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","diag","type","sqrt","cumulativeSum","dot","vector2","vector1","mmul","other","Bcolj","Float64Array","s","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","mmulStrassen","r1","c1","r2","c2","embed","mat","cols","resultat","console","warn","blockMult","halfRows","parseInt","halfCols","subMatrix","sub","scaleRows","isFinite","scaleColumns","flipRows","middle","ceil","first","last","flipColumns","kroneckerProduct","q","transpose","sortRows","compareFunction","compareNumbers","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","checkIndices","rowIndex","columnIndex","trace","by","sumByRow","sumByColumn","sumAll","product","productByRow","productByColumn","productAll","mean","variance","unbiased","sum1","sum2","varianceByRow","varianceByColumn","varianceAll","standardDeviation","center","centerByRow","centerByColumn","centerAll","scale","pow","getScaleByRow","scaleByRow","getScaleByColumn","scaleByColumn","divider","getScaleAll","scaleAll","for","rand","randomInt","randInt","diagonal","identity","eye","negate","tensorProduct","nRows","nColumns","arrayData","removeRow","splice","addRow","removeColumn","newRow","addColumn","addS","addM","subS","subM","subtract","subtractS","subtractM","mul","mulM","multiply","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","acos","acosh","asin","asinh","atan","atanh","cbrt","clz32","cos","cosh","exp","expm1","fround","log","log1p","log10","log2","sign","sin","sinh","tan","tanh","trunc","arg0","powS","powM","installMathOperations","BaseView","MatrixTransposeView","WrapperMatrix2D","LuDecomposition","t","LUcolj","kmax","lu","pivotVector","pivotSign","LU","isSingular","col","solve","count","X","determinant","hypotenuse","QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","aux","nu","ni","U","V","work","si","nct","nrt","mrc","pp","eps","EPSILON","kase","alpha","ks","f","cs","sn","sp","spm1","epm1","sk","ek","shift","g","Y","threshold","scols","Ls","rightSingularVectors","VL","vrows","urows","VLU","solveForDiagonal","inverse","vcols","ucols","tol","ii","useSVD","leftHandSide","rightHandSide","defaultOptions","assign","matrixCase","len","cond","arrayCase","windowSize","derivative","polynomial","pad","padValue","savitzkyGolay","C","padArray","ans","J","ones","inic","Jtranspose","factorial","det","d","_ref","module","exports","window","median","quickSelectMedian","xDivide","array1","array2","constant","isConstant","array3","ascending","NaN","bisector","compare","ascendingComparator","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","descending","number$1","deviation","extent","range","stop","e10","e5","e2","ticks","tickStep","step0","step1","LN10","error","sturges","values","LN2","number","histogram","domain","xz","tz","pop","bin","bins","_","thresholds","quantile","freedmanDiaconis","scott","numbers","merge","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","i0","i1","zip","version","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","factory","xSubtract","arithmeticMean","lnsum","means","samples","percent","alreadySorted","half","theMean","theVariance","averageDeviations","stdev","quart","q1","q2","q3","pooledVariance","vari","itemCount","itemArray","mean1","mean2","cov","s2","s3","dev","s4","weights","weightedVariance","weightedMean","z","w","inPlace","standardDev","Analysis","id","substring","label","spectra","pushSpectrum","variables","meta","dataType","title","xVariable","yVariable","key","variable","units","replace","flavor","standardizeData","getSpectrum","selector","getSpectra","spectrum","getNormalizedData","normalization","filters","processing","filterOptions","Stat","normed","process","kind","getXLabel","getYLabel","GC_MS_FIELDS","complexChromatogram","chromatogram","times","series","ms","dimension","existingGCMSFields","convertMSFieldToLabel","pageValue","parseFloat","isMSField","canonicDataLabel","convertToFloatArray","stringArray","floatArray","fastParseXYData","yFactor","deltaX","isXYdata","currentData","ascii","currentX","firstX","currentY","firstY","endLine","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","duplicate","ascii2","removeCommentRegExp","peakTableSplitRegExp","parsePeakTable","isPeaktable","keys","numberOfVariables","lines","split","trim","logs","parseXYZ","xFactor","parseXY","parseXYA","removeSymbolRegExp","isXYAdata","add2D","zData","minZ","maxZ","ySize","xSize","lastX","lastY","minX","maxX","minY","maxY","noise","getMedian","convertTo3DZ","noContour","contourLines","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","pAx","pAy","pBx","pBy","lineZValue","nbSubSpectra","nbPovars","dx","y0","dy","iter","nbContourLevels","contourLevels","level","contourLevel","side","noiseMultiplier","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","generateContourLines","minMax","FFT","_n","_bitrev","_cstb","core","init","_initArray","_makeBitReversalTable","_makeCosSinTable","fft1d","re","im","fft","ifft1d","bt1d","fft2d","tre","tim","x2","y1","y2","ifft2d","inv","ik","wr","wi","xr","n4","Uint32Array","_paddingZero","n2","n8","n2p4","PI","dc","ds","apis","bt","ifft","gyromagneticRatio","profiling","action","time","Date","now","simpleChromatogram","intensity","postProcessing","entriesFlat","observeFrequency","shiftOffsetVal","entry","ntuples","symbol","xUnits","toUpperCase","includes","nucleus","unit","pageSymbolIndex","pageSymbol","ratio0","ratio1","ratio","postProcessingNMR","newNtuples","twoD","wantXY","keepSpectra","prepareNtuplesDatatable","currentEntry","xIndex","yIndex","firstVariable","secondVariable","charAt","lowerCaseSymbol","vardim","nbPoints","varname","yUnits","prepareSpectrum","ntuplesSeparator","Spectrum","keepRecordsRegExp","canonicDataLabels","canonicMetadataLabels","dynamicTyping","withoutXY","addStyle","serie","color","style","width","dash","COLORS","fromVariables","info","forceNtuples","jcampOptions","xLabel","yLabel","owner","origin","header","fromJSON","varName","varType","varDim","minFct","maxFct","point","creatorNtuples","getJcamp","lineSplitTrim","lineSplit","parseOneIGA","measLen","metaData","systemType","systemOwner","systemReference","systemSerialNumber","sampleNumber","experimentType","experimentNumber","comment","source","batch","experimentTitle","sampleWeight","sampleWeightUnit","sampleWeightDry","sampleWeightDryUnit","balanceTrimV","balanceTrimVUnit","balanceTrimT","counterWeightM","counterWeightMUnit","counterWeightRho","counterWeightRhoUnit","counterWeightT","tungstenM","tungstenMUnit","tungstenRho","tungstenRhoUnit","chainExcessM","chainExcessMUnit","chainExcessRho","chainExcessRhoUnit","chainExcessT","applicationCode","mode","gasSource","vessel","reactor","pressureSensor","thermostat","nitrogenEOS","nitrogenSVP","seriesType","course","referenceStateDevice","scanTitle","scanStart","parseIGAMeasurmentHeader","dataBlock","pressure","gasDensity","pp0","totalWeight","bet","excessAdsorptionPercentage","excessAdsorption","sampleT","wtPercent","parseIGADataBlock","scanEnd","scanReferenceState","parseMetaBlock","dataStartIndex","match","sample","operator","submitter","file","started","adsorptive","completed","equilibrationTime","equilibrationTimeUnit","reportTime","mass","model","density","sampleDensity","sampleDensityUnit","evacRate","evacRateUnit","parseIsothermTable","parts","pSat","self","document","postMessage","o","test","location","protocol","dynamicTypingFunction","transform","worker","WORKERS_SUPPORTED","URL","webkitURL","BLOB_URL","createObjectURL","Blob","Worker","onmessage","userStep","userChunk","chunk","userComplete","complete","userError","config","workerId","download","readable","read","on","File","stream","unparse","delimiter","BAD_DELIMITERS","quotes","skipEmptyLines","newline","quoteChar","escapeChar","RegExp","u","fields","RECORD_SEP","fromCharCode","UNIT_SEP","BYTE_ORDER_MARK","NODE_STREAM_INPUT","LocalChunkSize","RemoteChunkSize","DefaultDelimiter","Parser","ParserHandle","NetworkStreamer","FileStreamer","StringStreamer","ReadableStreamStreamer","jQuery","fn","each","prop","attr","FileReader","files","inputElem","instanceConfig","extend","before","reason","_handle","_finished","_completed","_halted","_input","_baseIndex","_partialLine","_rowCount","_start","_nextChunk","isFirstChunk","_completeResults","errors","E","chunkSize","streamer","_config","parseChunk","beforeFirstChunk","paused","aborted","cursor","preview","results","WORKER_ID","finished","_sendError","_readChunk","_chunkLoaded","XMLHttpRequest","withCredentials","onload","onerror","_chunkError","open","downloadRequestBody","downloadRequestHeaders","setRequestHeader","send","message","status","readyState","responseText","getResponseHeader","lastIndexOf","statusText","webkitSlice","mozSlice","FileReaderSync","readAsText","encoding","target","pause","resume","_streamData","_streamEnd","_streamError","_checkIsFinished","_streamCleanUp","removeListener","abort","transformHeader","code","comments","successful","bestDelimiter","delimitersToGuess","getCharIndex","setTimeout","O","D","I","T","A","L","F","fastMode","M","R","S","nextDelim","quoteSearch","linebreak","truncated","terminate","create","idealGasConstant","readFile","utils","encode_cell","require","valueElseUndefined","cell","valueElseUndefinedFloat","valueElseUndefinedInt","valueElseUndefinedStripUnit","parseIsothermBlock","worksheet","pi","pe","pe2","p0","va","adresses","counter","cellRef","analyses","addAnalysis","analysis","getAnalysisIndex","getAnalyses","ids","removeAnalysis","path","adsDesSheet","Sheets","AdsDes","fileName","C2","date","C3","C4","comment1","C5","comment2","C6","comment3","C7","comment4","C8","serialNumber","C9","C10","C12","D12","standardVolume","C13","standardVolumeUnit","D13","deadVolume","C14","deadVolumeUnit","D14","equilibriumTime","C15","equilibriumTimeUnit","D15","C16","apparatusT","C17","apparatusTUnit","D17","adsorptionT","C18","adsorptionTUnit","D18","saturatedVaporPressure","H12","saturatedVaporPressureUnit","I12","adsorptionCrossSectionArea","H13","adsorptionCrossSectionAreaUnit","I13","adsorptionPoints","H17","desorptionPoints","H18","getAdsDesMeta","rangeDes","adsorption","desorption","parseAdsDesData","text","lineNumbers","starts","ends","entries","getLineNumbersOfMeasurement","meas","jcamp","converted","tmpResult","children","parentsStack","ldrs","ldr","dataLabel","dataValue","infos","datatable","parentEntry","dataClass","xType","shiftOffsetNum","vartype","varform","yType","page","sampleDescription","startsWith","parsedValue","flatten","convert","currentSpectrum","addJcamp","parsed","Papa","arrayColumn","arr","headerRow","startsAndEnds","isothermTableStarts","isothermTableEnds","isIsothermTable","findDataBlocks","colors","axes","unitWrapperBefore","unitWrapperAfter","flipped","display","boundary","annotations","ignore","strokeWidth","fillColor","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","jcamps"],"mappings":"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"}